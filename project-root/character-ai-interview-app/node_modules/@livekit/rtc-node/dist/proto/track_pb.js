// Copyright 2023 LiveKit, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { RtcStats } from "./stats_pb.js";
import { EncryptionType } from "./e2ee_pb.js";
import { FfiOwnedHandle } from "./handle_pb.js";
/**
 * @generated from enum livekit.proto.TrackKind
 */
export var TrackKind;
(function (TrackKind) {
    /**
     * @generated from enum value: KIND_UNKNOWN = 0;
     */
    TrackKind[TrackKind["KIND_UNKNOWN"] = 0] = "KIND_UNKNOWN";
    /**
     * @generated from enum value: KIND_AUDIO = 1;
     */
    TrackKind[TrackKind["KIND_AUDIO"] = 1] = "KIND_AUDIO";
    /**
     * @generated from enum value: KIND_VIDEO = 2;
     */
    TrackKind[TrackKind["KIND_VIDEO"] = 2] = "KIND_VIDEO";
})(TrackKind || (TrackKind = {}));
// Retrieve enum metadata with: proto3.getEnumType(TrackKind)
proto3.util.setEnumType(TrackKind, "livekit.proto.TrackKind", [
    { no: 0, name: "KIND_UNKNOWN" },
    { no: 1, name: "KIND_AUDIO" },
    { no: 2, name: "KIND_VIDEO" },
]);
/**
 * @generated from enum livekit.proto.TrackSource
 */
export var TrackSource;
(function (TrackSource) {
    /**
     * @generated from enum value: SOURCE_UNKNOWN = 0;
     */
    TrackSource[TrackSource["SOURCE_UNKNOWN"] = 0] = "SOURCE_UNKNOWN";
    /**
     * @generated from enum value: SOURCE_CAMERA = 1;
     */
    TrackSource[TrackSource["SOURCE_CAMERA"] = 1] = "SOURCE_CAMERA";
    /**
     * @generated from enum value: SOURCE_MICROPHONE = 2;
     */
    TrackSource[TrackSource["SOURCE_MICROPHONE"] = 2] = "SOURCE_MICROPHONE";
    /**
     * @generated from enum value: SOURCE_SCREENSHARE = 3;
     */
    TrackSource[TrackSource["SOURCE_SCREENSHARE"] = 3] = "SOURCE_SCREENSHARE";
    /**
     * @generated from enum value: SOURCE_SCREENSHARE_AUDIO = 4;
     */
    TrackSource[TrackSource["SOURCE_SCREENSHARE_AUDIO"] = 4] = "SOURCE_SCREENSHARE_AUDIO";
})(TrackSource || (TrackSource = {}));
// Retrieve enum metadata with: proto3.getEnumType(TrackSource)
proto3.util.setEnumType(TrackSource, "livekit.proto.TrackSource", [
    { no: 0, name: "SOURCE_UNKNOWN" },
    { no: 1, name: "SOURCE_CAMERA" },
    { no: 2, name: "SOURCE_MICROPHONE" },
    { no: 3, name: "SOURCE_SCREENSHARE" },
    { no: 4, name: "SOURCE_SCREENSHARE_AUDIO" },
]);
/**
 * @generated from enum livekit.proto.StreamState
 */
export var StreamState;
(function (StreamState) {
    /**
     * @generated from enum value: STATE_UNKNOWN = 0;
     */
    StreamState[StreamState["STATE_UNKNOWN"] = 0] = "STATE_UNKNOWN";
    /**
     * @generated from enum value: STATE_ACTIVE = 1;
     */
    StreamState[StreamState["STATE_ACTIVE"] = 1] = "STATE_ACTIVE";
    /**
     * @generated from enum value: STATE_PAUSED = 2;
     */
    StreamState[StreamState["STATE_PAUSED"] = 2] = "STATE_PAUSED";
})(StreamState || (StreamState = {}));
// Retrieve enum metadata with: proto3.getEnumType(StreamState)
proto3.util.setEnumType(StreamState, "livekit.proto.StreamState", [
    { no: 0, name: "STATE_UNKNOWN" },
    { no: 1, name: "STATE_ACTIVE" },
    { no: 2, name: "STATE_PAUSED" },
]);
/**
 * Create a new VideoTrack from a VideoSource
 *
 * @generated from message livekit.proto.CreateVideoTrackRequest
 */
export class CreateVideoTrackRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string name = 1;
         */
        this.name = "";
        /**
         * @generated from field: uint64 source_handle = 2;
         */
        this.sourceHandle = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateVideoTrackRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateVideoTrackRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateVideoTrackRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateVideoTrackRequest, a, b);
    }
}
CreateVideoTrackRequest.runtime = proto3;
CreateVideoTrackRequest.typeName = "livekit.proto.CreateVideoTrackRequest";
CreateVideoTrackRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "source_handle", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.CreateVideoTrackResponse
 */
export class CreateVideoTrackResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateVideoTrackResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateVideoTrackResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateVideoTrackResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateVideoTrackResponse, a, b);
    }
}
CreateVideoTrackResponse.runtime = proto3;
CreateVideoTrackResponse.typeName = "livekit.proto.CreateVideoTrackResponse";
CreateVideoTrackResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "track", kind: "message", T: OwnedTrack },
]);
/**
 * Create a new AudioTrack from a AudioSource
 *
 * @generated from message livekit.proto.CreateAudioTrackRequest
 */
export class CreateAudioTrackRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string name = 1;
         */
        this.name = "";
        /**
         * @generated from field: uint64 source_handle = 2;
         */
        this.sourceHandle = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateAudioTrackRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateAudioTrackRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateAudioTrackRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateAudioTrackRequest, a, b);
    }
}
CreateAudioTrackRequest.runtime = proto3;
CreateAudioTrackRequest.typeName = "livekit.proto.CreateAudioTrackRequest";
CreateAudioTrackRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "source_handle", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.CreateAudioTrackResponse
 */
export class CreateAudioTrackResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateAudioTrackResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateAudioTrackResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateAudioTrackResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateAudioTrackResponse, a, b);
    }
}
CreateAudioTrackResponse.runtime = proto3;
CreateAudioTrackResponse.typeName = "livekit.proto.CreateAudioTrackResponse";
CreateAudioTrackResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "track", kind: "message", T: OwnedTrack },
]);
/**
 * @generated from message livekit.proto.GetStatsRequest
 */
export class GetStatsRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 track_handle = 1;
         */
        this.trackHandle = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetStatsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetStatsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetStatsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GetStatsRequest, a, b);
    }
}
GetStatsRequest.runtime = proto3;
GetStatsRequest.typeName = "livekit.proto.GetStatsRequest";
GetStatsRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "track_handle", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.GetStatsResponse
 */
export class GetStatsResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 async_id = 1;
         */
        this.asyncId = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetStatsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetStatsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetStatsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GetStatsResponse, a, b);
    }
}
GetStatsResponse.runtime = proto3;
GetStatsResponse.typeName = "livekit.proto.GetStatsResponse";
GetStatsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "async_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.GetStatsCallback
 */
export class GetStatsCallback extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 async_id = 1;
         */
        this.asyncId = protoInt64.zero;
        /**
         * @generated from field: repeated livekit.proto.RtcStats stats = 3;
         */
        this.stats = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetStatsCallback().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetStatsCallback().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetStatsCallback().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GetStatsCallback, a, b);
    }
}
GetStatsCallback.runtime = proto3;
GetStatsCallback.typeName = "livekit.proto.GetStatsCallback";
GetStatsCallback.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "async_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "stats", kind: "message", T: RtcStats, repeated: true },
]);
/**
 * @generated from message livekit.proto.TrackEvent
 */
export class TrackEvent extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TrackEvent().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TrackEvent().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TrackEvent().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(TrackEvent, a, b);
    }
}
TrackEvent.runtime = proto3;
TrackEvent.typeName = "livekit.proto.TrackEvent";
TrackEvent.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message livekit.proto.TrackPublicationInfo
 */
export class TrackPublicationInfo extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sid = 1;
         */
        this.sid = "";
        /**
         * @generated from field: string name = 2;
         */
        this.name = "";
        /**
         * @generated from field: livekit.proto.TrackKind kind = 3;
         */
        this.kind = TrackKind.KIND_UNKNOWN;
        /**
         * @generated from field: livekit.proto.TrackSource source = 4;
         */
        this.source = TrackSource.SOURCE_UNKNOWN;
        /**
         * @generated from field: bool simulcasted = 5;
         */
        this.simulcasted = false;
        /**
         * @generated from field: uint32 width = 6;
         */
        this.width = 0;
        /**
         * @generated from field: uint32 height = 7;
         */
        this.height = 0;
        /**
         * @generated from field: string mime_type = 8;
         */
        this.mimeType = "";
        /**
         * @generated from field: bool muted = 9;
         */
        this.muted = false;
        /**
         * @generated from field: bool remote = 10;
         */
        this.remote = false;
        /**
         * @generated from field: livekit.proto.EncryptionType encryption_type = 11;
         */
        this.encryptionType = EncryptionType.NONE;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TrackPublicationInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TrackPublicationInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TrackPublicationInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(TrackPublicationInfo, a, b);
    }
}
TrackPublicationInfo.runtime = proto3;
TrackPublicationInfo.typeName = "livekit.proto.TrackPublicationInfo";
TrackPublicationInfo.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "kind", kind: "enum", T: proto3.getEnumType(TrackKind) },
    { no: 4, name: "source", kind: "enum", T: proto3.getEnumType(TrackSource) },
    { no: 5, name: "simulcasted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "width", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "height", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "mime_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "muted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "remote", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "encryption_type", kind: "enum", T: proto3.getEnumType(EncryptionType) },
]);
/**
 * @generated from message livekit.proto.OwnedTrackPublication
 */
export class OwnedTrackPublication extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new OwnedTrackPublication().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OwnedTrackPublication().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OwnedTrackPublication().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(OwnedTrackPublication, a, b);
    }
}
OwnedTrackPublication.runtime = proto3;
OwnedTrackPublication.typeName = "livekit.proto.OwnedTrackPublication";
OwnedTrackPublication.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "handle", kind: "message", T: FfiOwnedHandle },
    { no: 2, name: "info", kind: "message", T: TrackPublicationInfo },
]);
/**
 * @generated from message livekit.proto.TrackInfo
 */
export class TrackInfo extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sid = 1;
         */
        this.sid = "";
        /**
         * @generated from field: string name = 2;
         */
        this.name = "";
        /**
         * @generated from field: livekit.proto.TrackKind kind = 3;
         */
        this.kind = TrackKind.KIND_UNKNOWN;
        /**
         * @generated from field: livekit.proto.StreamState stream_state = 4;
         */
        this.streamState = StreamState.STATE_UNKNOWN;
        /**
         * @generated from field: bool muted = 5;
         */
        this.muted = false;
        /**
         * @generated from field: bool remote = 6;
         */
        this.remote = false;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TrackInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TrackInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TrackInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(TrackInfo, a, b);
    }
}
TrackInfo.runtime = proto3;
TrackInfo.typeName = "livekit.proto.TrackInfo";
TrackInfo.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "kind", kind: "enum", T: proto3.getEnumType(TrackKind) },
    { no: 4, name: "stream_state", kind: "enum", T: proto3.getEnumType(StreamState) },
    { no: 5, name: "muted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "remote", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
]);
/**
 * @generated from message livekit.proto.OwnedTrack
 */
export class OwnedTrack extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new OwnedTrack().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OwnedTrack().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OwnedTrack().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(OwnedTrack, a, b);
    }
}
OwnedTrack.runtime = proto3;
OwnedTrack.typeName = "livekit.proto.OwnedTrack";
OwnedTrack.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "handle", kind: "message", T: FfiOwnedHandle },
    { no: 2, name: "info", kind: "message", T: TrackInfo },
]);
//# sourceMappingURL=track_pb.js.map