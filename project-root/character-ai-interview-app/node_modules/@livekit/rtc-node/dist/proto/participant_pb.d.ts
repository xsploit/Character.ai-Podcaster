import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { FfiOwnedHandle } from "./handle_pb.js";
/**
 * @generated from message livekit.proto.ParticipantInfo
 */
export declare class ParticipantInfo extends Message<ParticipantInfo> {
    /**
     * @generated from field: string sid = 1;
     */
    sid: string;
    /**
     * @generated from field: string name = 2;
     */
    name: string;
    /**
     * @generated from field: string identity = 3;
     */
    identity: string;
    /**
     * @generated from field: string metadata = 4;
     */
    metadata: string;
    /**
     * @generated from field: map<string, string> attributes = 5;
     */
    attributes: {
        [key: string]: string;
    };
    constructor(data?: PartialMessage<ParticipantInfo>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.ParticipantInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantInfo;
    static equals(a: ParticipantInfo | PlainMessage<ParticipantInfo> | undefined, b: ParticipantInfo | PlainMessage<ParticipantInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedParticipant
 */
export declare class OwnedParticipant extends Message<OwnedParticipant> {
    /**
     * @generated from field: livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: livekit.proto.ParticipantInfo info = 2;
     */
    info?: ParticipantInfo;
    constructor(data?: PartialMessage<OwnedParticipant>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.OwnedParticipant";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedParticipant;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedParticipant;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedParticipant;
    static equals(a: OwnedParticipant | PlainMessage<OwnedParticipant> | undefined, b: OwnedParticipant | PlainMessage<OwnedParticipant> | undefined): boolean;
}
//# sourceMappingURL=participant_pb.d.ts.map