import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { RtcStats } from "./stats_pb.js";
import { EncryptionType } from "./e2ee_pb.js";
import { FfiOwnedHandle } from "./handle_pb.js";
/**
 * @generated from enum livekit.proto.TrackKind
 */
export declare enum TrackKind {
    /**
     * @generated from enum value: KIND_UNKNOWN = 0;
     */
    KIND_UNKNOWN = 0,
    /**
     * @generated from enum value: KIND_AUDIO = 1;
     */
    KIND_AUDIO = 1,
    /**
     * @generated from enum value: KIND_VIDEO = 2;
     */
    KIND_VIDEO = 2
}
/**
 * @generated from enum livekit.proto.TrackSource
 */
export declare enum TrackSource {
    /**
     * @generated from enum value: SOURCE_UNKNOWN = 0;
     */
    SOURCE_UNKNOWN = 0,
    /**
     * @generated from enum value: SOURCE_CAMERA = 1;
     */
    SOURCE_CAMERA = 1,
    /**
     * @generated from enum value: SOURCE_MICROPHONE = 2;
     */
    SOURCE_MICROPHONE = 2,
    /**
     * @generated from enum value: SOURCE_SCREENSHARE = 3;
     */
    SOURCE_SCREENSHARE = 3,
    /**
     * @generated from enum value: SOURCE_SCREENSHARE_AUDIO = 4;
     */
    SOURCE_SCREENSHARE_AUDIO = 4
}
/**
 * @generated from enum livekit.proto.StreamState
 */
export declare enum StreamState {
    /**
     * @generated from enum value: STATE_UNKNOWN = 0;
     */
    STATE_UNKNOWN = 0,
    /**
     * @generated from enum value: STATE_ACTIVE = 1;
     */
    STATE_ACTIVE = 1,
    /**
     * @generated from enum value: STATE_PAUSED = 2;
     */
    STATE_PAUSED = 2
}
/**
 * Create a new VideoTrack from a VideoSource
 *
 * @generated from message livekit.proto.CreateVideoTrackRequest
 */
export declare class CreateVideoTrackRequest extends Message<CreateVideoTrackRequest> {
    /**
     * @generated from field: string name = 1;
     */
    name: string;
    /**
     * @generated from field: uint64 source_handle = 2;
     */
    sourceHandle: bigint;
    constructor(data?: PartialMessage<CreateVideoTrackRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.CreateVideoTrackRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateVideoTrackRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateVideoTrackRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateVideoTrackRequest;
    static equals(a: CreateVideoTrackRequest | PlainMessage<CreateVideoTrackRequest> | undefined, b: CreateVideoTrackRequest | PlainMessage<CreateVideoTrackRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.CreateVideoTrackResponse
 */
export declare class CreateVideoTrackResponse extends Message<CreateVideoTrackResponse> {
    /**
     * @generated from field: livekit.proto.OwnedTrack track = 1;
     */
    track?: OwnedTrack;
    constructor(data?: PartialMessage<CreateVideoTrackResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.CreateVideoTrackResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateVideoTrackResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateVideoTrackResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateVideoTrackResponse;
    static equals(a: CreateVideoTrackResponse | PlainMessage<CreateVideoTrackResponse> | undefined, b: CreateVideoTrackResponse | PlainMessage<CreateVideoTrackResponse> | undefined): boolean;
}
/**
 * Create a new AudioTrack from a AudioSource
 *
 * @generated from message livekit.proto.CreateAudioTrackRequest
 */
export declare class CreateAudioTrackRequest extends Message<CreateAudioTrackRequest> {
    /**
     * @generated from field: string name = 1;
     */
    name: string;
    /**
     * @generated from field: uint64 source_handle = 2;
     */
    sourceHandle: bigint;
    constructor(data?: PartialMessage<CreateAudioTrackRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.CreateAudioTrackRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAudioTrackRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAudioTrackRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAudioTrackRequest;
    static equals(a: CreateAudioTrackRequest | PlainMessage<CreateAudioTrackRequest> | undefined, b: CreateAudioTrackRequest | PlainMessage<CreateAudioTrackRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.CreateAudioTrackResponse
 */
export declare class CreateAudioTrackResponse extends Message<CreateAudioTrackResponse> {
    /**
     * @generated from field: livekit.proto.OwnedTrack track = 1;
     */
    track?: OwnedTrack;
    constructor(data?: PartialMessage<CreateAudioTrackResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.CreateAudioTrackResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAudioTrackResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAudioTrackResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAudioTrackResponse;
    static equals(a: CreateAudioTrackResponse | PlainMessage<CreateAudioTrackResponse> | undefined, b: CreateAudioTrackResponse | PlainMessage<CreateAudioTrackResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetStatsRequest
 */
export declare class GetStatsRequest extends Message<GetStatsRequest> {
    /**
     * @generated from field: uint64 track_handle = 1;
     */
    trackHandle: bigint;
    constructor(data?: PartialMessage<GetStatsRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.GetStatsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatsRequest;
    static equals(a: GetStatsRequest | PlainMessage<GetStatsRequest> | undefined, b: GetStatsRequest | PlainMessage<GetStatsRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetStatsResponse
 */
export declare class GetStatsResponse extends Message<GetStatsResponse> {
    /**
     * @generated from field: uint64 async_id = 1;
     */
    asyncId: bigint;
    constructor(data?: PartialMessage<GetStatsResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.GetStatsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatsResponse;
    static equals(a: GetStatsResponse | PlainMessage<GetStatsResponse> | undefined, b: GetStatsResponse | PlainMessage<GetStatsResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetStatsCallback
 */
export declare class GetStatsCallback extends Message<GetStatsCallback> {
    /**
     * @generated from field: uint64 async_id = 1;
     */
    asyncId: bigint;
    /**
     * @generated from field: optional string error = 2;
     */
    error?: string;
    /**
     * @generated from field: repeated livekit.proto.RtcStats stats = 3;
     */
    stats: RtcStats[];
    constructor(data?: PartialMessage<GetStatsCallback>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.GetStatsCallback";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatsCallback;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatsCallback;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatsCallback;
    static equals(a: GetStatsCallback | PlainMessage<GetStatsCallback> | undefined, b: GetStatsCallback | PlainMessage<GetStatsCallback> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.TrackEvent
 */
export declare class TrackEvent extends Message<TrackEvent> {
    constructor(data?: PartialMessage<TrackEvent>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.TrackEvent";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackEvent;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackEvent;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackEvent;
    static equals(a: TrackEvent | PlainMessage<TrackEvent> | undefined, b: TrackEvent | PlainMessage<TrackEvent> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.TrackPublicationInfo
 */
export declare class TrackPublicationInfo extends Message<TrackPublicationInfo> {
    /**
     * @generated from field: string sid = 1;
     */
    sid: string;
    /**
     * @generated from field: string name = 2;
     */
    name: string;
    /**
     * @generated from field: livekit.proto.TrackKind kind = 3;
     */
    kind: TrackKind;
    /**
     * @generated from field: livekit.proto.TrackSource source = 4;
     */
    source: TrackSource;
    /**
     * @generated from field: bool simulcasted = 5;
     */
    simulcasted: boolean;
    /**
     * @generated from field: uint32 width = 6;
     */
    width: number;
    /**
     * @generated from field: uint32 height = 7;
     */
    height: number;
    /**
     * @generated from field: string mime_type = 8;
     */
    mimeType: string;
    /**
     * @generated from field: bool muted = 9;
     */
    muted: boolean;
    /**
     * @generated from field: bool remote = 10;
     */
    remote: boolean;
    /**
     * @generated from field: livekit.proto.EncryptionType encryption_type = 11;
     */
    encryptionType: EncryptionType;
    constructor(data?: PartialMessage<TrackPublicationInfo>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.TrackPublicationInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackPublicationInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackPublicationInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackPublicationInfo;
    static equals(a: TrackPublicationInfo | PlainMessage<TrackPublicationInfo> | undefined, b: TrackPublicationInfo | PlainMessage<TrackPublicationInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedTrackPublication
 */
export declare class OwnedTrackPublication extends Message<OwnedTrackPublication> {
    /**
     * @generated from field: livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: livekit.proto.TrackPublicationInfo info = 2;
     */
    info?: TrackPublicationInfo;
    constructor(data?: PartialMessage<OwnedTrackPublication>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.OwnedTrackPublication";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedTrackPublication;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedTrackPublication;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedTrackPublication;
    static equals(a: OwnedTrackPublication | PlainMessage<OwnedTrackPublication> | undefined, b: OwnedTrackPublication | PlainMessage<OwnedTrackPublication> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.TrackInfo
 */
export declare class TrackInfo extends Message<TrackInfo> {
    /**
     * @generated from field: string sid = 1;
     */
    sid: string;
    /**
     * @generated from field: string name = 2;
     */
    name: string;
    /**
     * @generated from field: livekit.proto.TrackKind kind = 3;
     */
    kind: TrackKind;
    /**
     * @generated from field: livekit.proto.StreamState stream_state = 4;
     */
    streamState: StreamState;
    /**
     * @generated from field: bool muted = 5;
     */
    muted: boolean;
    /**
     * @generated from field: bool remote = 6;
     */
    remote: boolean;
    constructor(data?: PartialMessage<TrackInfo>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.TrackInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackInfo;
    static equals(a: TrackInfo | PlainMessage<TrackInfo> | undefined, b: TrackInfo | PlainMessage<TrackInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedTrack
 */
export declare class OwnedTrack extends Message<OwnedTrack> {
    /**
     * @generated from field: livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: livekit.proto.TrackInfo info = 2;
     */
    info?: TrackInfo;
    constructor(data?: PartialMessage<OwnedTrack>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.OwnedTrack";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedTrack;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedTrack;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedTrack;
    static equals(a: OwnedTrack | PlainMessage<OwnedTrack> | undefined, b: OwnedTrack | PlainMessage<OwnedTrack> | undefined): boolean;
}
//# sourceMappingURL=track_pb.d.ts.map