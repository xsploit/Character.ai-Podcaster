import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * @generated from enum livekit.proto.DataChannelState
 */
export declare enum DataChannelState {
    /**
     * @generated from enum value: DC_CONNECTING = 0;
     */
    DC_CONNECTING = 0,
    /**
     * @generated from enum value: DC_OPEN = 1;
     */
    DC_OPEN = 1,
    /**
     * @generated from enum value: DC_CLOSING = 2;
     */
    DC_CLOSING = 2,
    /**
     * @generated from enum value: DC_CLOSED = 3;
     */
    DC_CLOSED = 3
}
/**
 * @generated from enum livekit.proto.QualityLimitationReason
 */
export declare enum QualityLimitationReason {
    /**
     * @generated from enum value: LIMITATION_NONE = 0;
     */
    LIMITATION_NONE = 0,
    /**
     * @generated from enum value: LIMITATION_CPU = 1;
     */
    LIMITATION_CPU = 1,
    /**
     * @generated from enum value: LIMITATION_BANDWIDTH = 2;
     */
    LIMITATION_BANDWIDTH = 2,
    /**
     * @generated from enum value: LIMITATION_OTHER = 3;
     */
    LIMITATION_OTHER = 3
}
/**
 * @generated from enum livekit.proto.IceRole
 */
export declare enum IceRole {
    /**
     * @generated from enum value: ICE_UNKNOWN = 0;
     */
    ICE_UNKNOWN = 0,
    /**
     * @generated from enum value: ICE_CONTROLLING = 1;
     */
    ICE_CONTROLLING = 1,
    /**
     * @generated from enum value: ICE_CONTROLLED = 2;
     */
    ICE_CONTROLLED = 2
}
/**
 * @generated from enum livekit.proto.DtlsTransportState
 */
export declare enum DtlsTransportState {
    /**
     * @generated from enum value: DTLS_TRANSPORT_NEW = 0;
     */
    DTLS_TRANSPORT_NEW = 0,
    /**
     * @generated from enum value: DTLS_TRANSPORT_CONNECTING = 1;
     */
    DTLS_TRANSPORT_CONNECTING = 1,
    /**
     * @generated from enum value: DTLS_TRANSPORT_CONNECTED = 2;
     */
    DTLS_TRANSPORT_CONNECTED = 2,
    /**
     * @generated from enum value: DTLS_TRANSPORT_CLOSED = 3;
     */
    DTLS_TRANSPORT_CLOSED = 3,
    /**
     * @generated from enum value: DTLS_TRANSPORT_FAILED = 4;
     */
    DTLS_TRANSPORT_FAILED = 4
}
/**
 * @generated from enum livekit.proto.IceTransportState
 */
export declare enum IceTransportState {
    /**
     * @generated from enum value: ICE_TRANSPORT_NEW = 0;
     */
    ICE_TRANSPORT_NEW = 0,
    /**
     * @generated from enum value: ICE_TRANSPORT_CHECKING = 1;
     */
    ICE_TRANSPORT_CHECKING = 1,
    /**
     * @generated from enum value: ICE_TRANSPORT_CONNECTED = 2;
     */
    ICE_TRANSPORT_CONNECTED = 2,
    /**
     * @generated from enum value: ICE_TRANSPORT_COMPLETED = 3;
     */
    ICE_TRANSPORT_COMPLETED = 3,
    /**
     * @generated from enum value: ICE_TRANSPORT_DISCONNECTED = 4;
     */
    ICE_TRANSPORT_DISCONNECTED = 4,
    /**
     * @generated from enum value: ICE_TRANSPORT_FAILED = 5;
     */
    ICE_TRANSPORT_FAILED = 5,
    /**
     * @generated from enum value: ICE_TRANSPORT_CLOSED = 6;
     */
    ICE_TRANSPORT_CLOSED = 6
}
/**
 * @generated from enum livekit.proto.DtlsRole
 */
export declare enum DtlsRole {
    /**
     * @generated from enum value: DTLS_CLIENT = 0;
     */
    DTLS_CLIENT = 0,
    /**
     * @generated from enum value: DTLS_SERVER = 1;
     */
    DTLS_SERVER = 1,
    /**
     * @generated from enum value: DTLS_UNKNOWN = 2;
     */
    DTLS_UNKNOWN = 2
}
/**
 * @generated from enum livekit.proto.IceCandidatePairState
 */
export declare enum IceCandidatePairState {
    /**
     * @generated from enum value: PAIR_FROZEN = 0;
     */
    PAIR_FROZEN = 0,
    /**
     * @generated from enum value: PAIR_WAITING = 1;
     */
    PAIR_WAITING = 1,
    /**
     * @generated from enum value: PAIR_IN_PROGRESS = 2;
     */
    PAIR_IN_PROGRESS = 2,
    /**
     * @generated from enum value: PAIR_FAILED = 3;
     */
    PAIR_FAILED = 3,
    /**
     * @generated from enum value: PAIR_SUCCEEDED = 4;
     */
    PAIR_SUCCEEDED = 4
}
/**
 * @generated from enum livekit.proto.IceCandidateType
 */
export declare enum IceCandidateType {
    /**
     * @generated from enum value: HOST = 0;
     */
    HOST = 0,
    /**
     * @generated from enum value: SRFLX = 1;
     */
    SRFLX = 1,
    /**
     * @generated from enum value: PRFLX = 2;
     */
    PRFLX = 2,
    /**
     * @generated from enum value: RELAY = 3;
     */
    RELAY = 3
}
/**
 * @generated from enum livekit.proto.IceServerTransportProtocol
 */
export declare enum IceServerTransportProtocol {
    /**
     * @generated from enum value: TRANSPORT_UDP = 0;
     */
    TRANSPORT_UDP = 0,
    /**
     * @generated from enum value: TRANSPORT_TCP = 1;
     */
    TRANSPORT_TCP = 1,
    /**
     * @generated from enum value: TRANSPORT_TLS = 2;
     */
    TRANSPORT_TLS = 2
}
/**
 * @generated from enum livekit.proto.IceTcpCandidateType
 */
export declare enum IceTcpCandidateType {
    /**
     * @generated from enum value: CANDIDATE_ACTIVE = 0;
     */
    CANDIDATE_ACTIVE = 0,
    /**
     * @generated from enum value: CANDIDATE_PASSIVE = 1;
     */
    CANDIDATE_PASSIVE = 1,
    /**
     * @generated from enum value: CANDIDATE_SO = 2;
     */
    CANDIDATE_SO = 2
}
/**
 * @generated from message livekit.proto.RtcStats
 */
export declare class RtcStats extends Message<RtcStats> {
    /**
     * @generated from oneof livekit.proto.RtcStats.stats
     */
    stats: {
        /**
         * @generated from field: livekit.proto.RtcStats.Codec codec = 3;
         */
        value: RtcStats_Codec;
        case: "codec";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.InboundRtp inbound_rtp = 4;
         */
        value: RtcStats_InboundRtp;
        case: "inboundRtp";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.OutboundRtp outbound_rtp = 5;
         */
        value: RtcStats_OutboundRtp;
        case: "outboundRtp";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.RemoteInboundRtp remote_inbound_rtp = 6;
         */
        value: RtcStats_RemoteInboundRtp;
        case: "remoteInboundRtp";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.RemoteOutboundRtp remote_outbound_rtp = 7;
         */
        value: RtcStats_RemoteOutboundRtp;
        case: "remoteOutboundRtp";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.MediaSource media_source = 8;
         */
        value: RtcStats_MediaSource;
        case: "mediaSource";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.MediaPlayout media_playout = 9;
         */
        value: RtcStats_MediaPlayout;
        case: "mediaPlayout";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.PeerConnection peer_connection = 10;
         */
        value: RtcStats_PeerConnection;
        case: "peerConnection";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.DataChannel data_channel = 11;
         */
        value: RtcStats_DataChannel;
        case: "dataChannel";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.Transport transport = 12;
         */
        value: RtcStats_Transport;
        case: "transport";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.CandidatePair candidate_pair = 13;
         */
        value: RtcStats_CandidatePair;
        case: "candidatePair";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.LocalCandidate local_candidate = 14;
         */
        value: RtcStats_LocalCandidate;
        case: "localCandidate";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.RemoteCandidate remote_candidate = 15;
         */
        value: RtcStats_RemoteCandidate;
        case: "remoteCandidate";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.Certificate certificate = 16;
         */
        value: RtcStats_Certificate;
        case: "certificate";
    } | {
        /**
         * @generated from field: livekit.proto.RtcStats.Track track = 17;
         */
        value: RtcStats_Track;
        case: "track";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<RtcStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats;
    static equals(a: RtcStats | PlainMessage<RtcStats> | undefined, b: RtcStats | PlainMessage<RtcStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.Codec
 */
export declare class RtcStats_Codec extends Message<RtcStats_Codec> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.CodecStats codec = 2;
     */
    codec?: CodecStats;
    constructor(data?: PartialMessage<RtcStats_Codec>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.Codec";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_Codec;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_Codec;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_Codec;
    static equals(a: RtcStats_Codec | PlainMessage<RtcStats_Codec> | undefined, b: RtcStats_Codec | PlainMessage<RtcStats_Codec> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.InboundRtp
 */
export declare class RtcStats_InboundRtp extends Message<RtcStats_InboundRtp> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.RtpStreamStats stream = 2;
     */
    stream?: RtpStreamStats;
    /**
     * @generated from field: livekit.proto.ReceivedRtpStreamStats received = 3;
     */
    received?: ReceivedRtpStreamStats;
    /**
     * @generated from field: livekit.proto.InboundRtpStreamStats inbound = 4;
     */
    inbound?: InboundRtpStreamStats;
    constructor(data?: PartialMessage<RtcStats_InboundRtp>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.InboundRtp";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_InboundRtp;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_InboundRtp;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_InboundRtp;
    static equals(a: RtcStats_InboundRtp | PlainMessage<RtcStats_InboundRtp> | undefined, b: RtcStats_InboundRtp | PlainMessage<RtcStats_InboundRtp> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.OutboundRtp
 */
export declare class RtcStats_OutboundRtp extends Message<RtcStats_OutboundRtp> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.RtpStreamStats stream = 2;
     */
    stream?: RtpStreamStats;
    /**
     * @generated from field: livekit.proto.SentRtpStreamStats sent = 3;
     */
    sent?: SentRtpStreamStats;
    /**
     * @generated from field: livekit.proto.OutboundRtpStreamStats outbound = 4;
     */
    outbound?: OutboundRtpStreamStats;
    constructor(data?: PartialMessage<RtcStats_OutboundRtp>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.OutboundRtp";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_OutboundRtp;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_OutboundRtp;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_OutboundRtp;
    static equals(a: RtcStats_OutboundRtp | PlainMessage<RtcStats_OutboundRtp> | undefined, b: RtcStats_OutboundRtp | PlainMessage<RtcStats_OutboundRtp> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.RemoteInboundRtp
 */
export declare class RtcStats_RemoteInboundRtp extends Message<RtcStats_RemoteInboundRtp> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.RtpStreamStats stream = 2;
     */
    stream?: RtpStreamStats;
    /**
     * @generated from field: livekit.proto.ReceivedRtpStreamStats received = 3;
     */
    received?: ReceivedRtpStreamStats;
    /**
     * @generated from field: livekit.proto.RemoteInboundRtpStreamStats remote_inbound = 4;
     */
    remoteInbound?: RemoteInboundRtpStreamStats;
    constructor(data?: PartialMessage<RtcStats_RemoteInboundRtp>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.RemoteInboundRtp";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_RemoteInboundRtp;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_RemoteInboundRtp;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_RemoteInboundRtp;
    static equals(a: RtcStats_RemoteInboundRtp | PlainMessage<RtcStats_RemoteInboundRtp> | undefined, b: RtcStats_RemoteInboundRtp | PlainMessage<RtcStats_RemoteInboundRtp> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.RemoteOutboundRtp
 */
export declare class RtcStats_RemoteOutboundRtp extends Message<RtcStats_RemoteOutboundRtp> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.RtpStreamStats stream = 2;
     */
    stream?: RtpStreamStats;
    /**
     * @generated from field: livekit.proto.SentRtpStreamStats sent = 3;
     */
    sent?: SentRtpStreamStats;
    /**
     * @generated from field: livekit.proto.RemoteOutboundRtpStreamStats remote_outbound = 4;
     */
    remoteOutbound?: RemoteOutboundRtpStreamStats;
    constructor(data?: PartialMessage<RtcStats_RemoteOutboundRtp>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.RemoteOutboundRtp";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_RemoteOutboundRtp;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_RemoteOutboundRtp;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_RemoteOutboundRtp;
    static equals(a: RtcStats_RemoteOutboundRtp | PlainMessage<RtcStats_RemoteOutboundRtp> | undefined, b: RtcStats_RemoteOutboundRtp | PlainMessage<RtcStats_RemoteOutboundRtp> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.MediaSource
 */
export declare class RtcStats_MediaSource extends Message<RtcStats_MediaSource> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.MediaSourceStats source = 2;
     */
    source?: MediaSourceStats;
    /**
     * @generated from field: livekit.proto.AudioSourceStats audio = 3;
     */
    audio?: AudioSourceStats;
    /**
     * @generated from field: livekit.proto.VideoSourceStats video = 4;
     */
    video?: VideoSourceStats;
    constructor(data?: PartialMessage<RtcStats_MediaSource>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.MediaSource";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_MediaSource;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_MediaSource;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_MediaSource;
    static equals(a: RtcStats_MediaSource | PlainMessage<RtcStats_MediaSource> | undefined, b: RtcStats_MediaSource | PlainMessage<RtcStats_MediaSource> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.MediaPlayout
 */
export declare class RtcStats_MediaPlayout extends Message<RtcStats_MediaPlayout> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.AudioPlayoutStats audio_playout = 2;
     */
    audioPlayout?: AudioPlayoutStats;
    constructor(data?: PartialMessage<RtcStats_MediaPlayout>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.MediaPlayout";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_MediaPlayout;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_MediaPlayout;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_MediaPlayout;
    static equals(a: RtcStats_MediaPlayout | PlainMessage<RtcStats_MediaPlayout> | undefined, b: RtcStats_MediaPlayout | PlainMessage<RtcStats_MediaPlayout> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.PeerConnection
 */
export declare class RtcStats_PeerConnection extends Message<RtcStats_PeerConnection> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.PeerConnectionStats pc = 2;
     */
    pc?: PeerConnectionStats;
    constructor(data?: PartialMessage<RtcStats_PeerConnection>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.PeerConnection";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_PeerConnection;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_PeerConnection;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_PeerConnection;
    static equals(a: RtcStats_PeerConnection | PlainMessage<RtcStats_PeerConnection> | undefined, b: RtcStats_PeerConnection | PlainMessage<RtcStats_PeerConnection> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.DataChannel
 */
export declare class RtcStats_DataChannel extends Message<RtcStats_DataChannel> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.DataChannelStats dc = 2;
     */
    dc?: DataChannelStats;
    constructor(data?: PartialMessage<RtcStats_DataChannel>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.DataChannel";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_DataChannel;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_DataChannel;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_DataChannel;
    static equals(a: RtcStats_DataChannel | PlainMessage<RtcStats_DataChannel> | undefined, b: RtcStats_DataChannel | PlainMessage<RtcStats_DataChannel> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.Transport
 */
export declare class RtcStats_Transport extends Message<RtcStats_Transport> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.TransportStats transport = 2;
     */
    transport?: TransportStats;
    constructor(data?: PartialMessage<RtcStats_Transport>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.Transport";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_Transport;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_Transport;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_Transport;
    static equals(a: RtcStats_Transport | PlainMessage<RtcStats_Transport> | undefined, b: RtcStats_Transport | PlainMessage<RtcStats_Transport> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.CandidatePair
 */
export declare class RtcStats_CandidatePair extends Message<RtcStats_CandidatePair> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.CandidatePairStats candidate_pair = 2;
     */
    candidatePair?: CandidatePairStats;
    constructor(data?: PartialMessage<RtcStats_CandidatePair>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.CandidatePair";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_CandidatePair;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_CandidatePair;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_CandidatePair;
    static equals(a: RtcStats_CandidatePair | PlainMessage<RtcStats_CandidatePair> | undefined, b: RtcStats_CandidatePair | PlainMessage<RtcStats_CandidatePair> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.LocalCandidate
 */
export declare class RtcStats_LocalCandidate extends Message<RtcStats_LocalCandidate> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.IceCandidateStats candidate = 2;
     */
    candidate?: IceCandidateStats;
    constructor(data?: PartialMessage<RtcStats_LocalCandidate>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.LocalCandidate";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_LocalCandidate;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_LocalCandidate;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_LocalCandidate;
    static equals(a: RtcStats_LocalCandidate | PlainMessage<RtcStats_LocalCandidate> | undefined, b: RtcStats_LocalCandidate | PlainMessage<RtcStats_LocalCandidate> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.RemoteCandidate
 */
export declare class RtcStats_RemoteCandidate extends Message<RtcStats_RemoteCandidate> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.IceCandidateStats candidate = 2;
     */
    candidate?: IceCandidateStats;
    constructor(data?: PartialMessage<RtcStats_RemoteCandidate>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.RemoteCandidate";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_RemoteCandidate;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_RemoteCandidate;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_RemoteCandidate;
    static equals(a: RtcStats_RemoteCandidate | PlainMessage<RtcStats_RemoteCandidate> | undefined, b: RtcStats_RemoteCandidate | PlainMessage<RtcStats_RemoteCandidate> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStats.Certificate
 */
export declare class RtcStats_Certificate extends Message<RtcStats_Certificate> {
    /**
     * @generated from field: livekit.proto.RtcStatsData rtc = 1;
     */
    rtc?: RtcStatsData;
    /**
     * @generated from field: livekit.proto.CertificateStats certificate = 2;
     */
    certificate?: CertificateStats;
    constructor(data?: PartialMessage<RtcStats_Certificate>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.Certificate";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_Certificate;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_Certificate;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_Certificate;
    static equals(a: RtcStats_Certificate | PlainMessage<RtcStats_Certificate> | undefined, b: RtcStats_Certificate | PlainMessage<RtcStats_Certificate> | undefined): boolean;
}
/**
 * Deprecated
 *
 * @generated from message livekit.proto.RtcStats.Track
 */
export declare class RtcStats_Track extends Message<RtcStats_Track> {
    constructor(data?: PartialMessage<RtcStats_Track>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStats.Track";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_Track;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_Track;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_Track;
    static equals(a: RtcStats_Track | PlainMessage<RtcStats_Track> | undefined, b: RtcStats_Track | PlainMessage<RtcStats_Track> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtcStatsData
 */
export declare class RtcStatsData extends Message<RtcStatsData> {
    /**
     * @generated from field: string id = 1;
     */
    id: string;
    /**
     * @generated from field: int64 timestamp = 2;
     */
    timestamp: bigint;
    constructor(data?: PartialMessage<RtcStatsData>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtcStatsData";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStatsData;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStatsData;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStatsData;
    static equals(a: RtcStatsData | PlainMessage<RtcStatsData> | undefined, b: RtcStatsData | PlainMessage<RtcStatsData> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.CodecStats
 */
export declare class CodecStats extends Message<CodecStats> {
    /**
     * @generated from field: uint32 payload_type = 1;
     */
    payloadType: number;
    /**
     * @generated from field: string transport_id = 2;
     */
    transportId: string;
    /**
     * @generated from field: string mime_type = 3;
     */
    mimeType: string;
    /**
     * @generated from field: uint32 clock_rate = 4;
     */
    clockRate: number;
    /**
     * @generated from field: uint32 channels = 5;
     */
    channels: number;
    /**
     * @generated from field: string sdp_fmtp_line = 6;
     */
    sdpFmtpLine: string;
    constructor(data?: PartialMessage<CodecStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.CodecStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodecStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodecStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodecStats;
    static equals(a: CodecStats | PlainMessage<CodecStats> | undefined, b: CodecStats | PlainMessage<CodecStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RtpStreamStats
 */
export declare class RtpStreamStats extends Message<RtpStreamStats> {
    /**
     * @generated from field: uint32 ssrc = 1;
     */
    ssrc: number;
    /**
     * @generated from field: string kind = 2;
     */
    kind: string;
    /**
     * @generated from field: string transport_id = 3;
     */
    transportId: string;
    /**
     * @generated from field: string codec_id = 4;
     */
    codecId: string;
    constructor(data?: PartialMessage<RtpStreamStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RtpStreamStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtpStreamStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtpStreamStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtpStreamStats;
    static equals(a: RtpStreamStats | PlainMessage<RtpStreamStats> | undefined, b: RtpStreamStats | PlainMessage<RtpStreamStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.ReceivedRtpStreamStats
 */
export declare class ReceivedRtpStreamStats extends Message<ReceivedRtpStreamStats> {
    /**
     * @generated from field: uint64 packets_received = 1;
     */
    packetsReceived: bigint;
    /**
     * @generated from field: int64 packets_lost = 2;
     */
    packetsLost: bigint;
    /**
     * @generated from field: double jitter = 3;
     */
    jitter: number;
    constructor(data?: PartialMessage<ReceivedRtpStreamStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.ReceivedRtpStreamStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReceivedRtpStreamStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReceivedRtpStreamStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReceivedRtpStreamStats;
    static equals(a: ReceivedRtpStreamStats | PlainMessage<ReceivedRtpStreamStats> | undefined, b: ReceivedRtpStreamStats | PlainMessage<ReceivedRtpStreamStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.InboundRtpStreamStats
 */
export declare class InboundRtpStreamStats extends Message<InboundRtpStreamStats> {
    /**
     * @generated from field: string track_identifier = 1;
     */
    trackIdentifier: string;
    /**
     * @generated from field: string mid = 2;
     */
    mid: string;
    /**
     * @generated from field: string remote_id = 3;
     */
    remoteId: string;
    /**
     * @generated from field: uint32 frames_decoded = 4;
     */
    framesDecoded: number;
    /**
     * @generated from field: uint32 key_frames_decoded = 5;
     */
    keyFramesDecoded: number;
    /**
     * @generated from field: uint32 frames_rendered = 6;
     */
    framesRendered: number;
    /**
     * @generated from field: uint32 frames_dropped = 7;
     */
    framesDropped: number;
    /**
     * @generated from field: uint32 frame_width = 8;
     */
    frameWidth: number;
    /**
     * @generated from field: uint32 frame_height = 9;
     */
    frameHeight: number;
    /**
     * @generated from field: double frames_per_second = 10;
     */
    framesPerSecond: number;
    /**
     * @generated from field: uint64 qp_sum = 11;
     */
    qpSum: bigint;
    /**
     * @generated from field: double total_decode_time = 12;
     */
    totalDecodeTime: number;
    /**
     * @generated from field: double total_inter_frame_delay = 13;
     */
    totalInterFrameDelay: number;
    /**
     * @generated from field: double total_squared_inter_frame_delay = 14;
     */
    totalSquaredInterFrameDelay: number;
    /**
     * @generated from field: uint32 pause_count = 15;
     */
    pauseCount: number;
    /**
     * @generated from field: double total_pause_duration = 16;
     */
    totalPauseDuration: number;
    /**
     * @generated from field: uint32 freeze_count = 17;
     */
    freezeCount: number;
    /**
     * @generated from field: double total_freeze_duration = 18;
     */
    totalFreezeDuration: number;
    /**
     * @generated from field: double last_packet_received_timestamp = 19;
     */
    lastPacketReceivedTimestamp: number;
    /**
     * @generated from field: uint64 header_bytes_received = 20;
     */
    headerBytesReceived: bigint;
    /**
     * @generated from field: uint64 packets_discarded = 21;
     */
    packetsDiscarded: bigint;
    /**
     * @generated from field: uint64 fec_bytes_received = 22;
     */
    fecBytesReceived: bigint;
    /**
     * @generated from field: uint64 fec_packets_received = 23;
     */
    fecPacketsReceived: bigint;
    /**
     * @generated from field: uint64 fec_packets_discarded = 24;
     */
    fecPacketsDiscarded: bigint;
    /**
     * @generated from field: uint64 bytes_received = 25;
     */
    bytesReceived: bigint;
    /**
     * @generated from field: uint32 nack_count = 26;
     */
    nackCount: number;
    /**
     * @generated from field: uint32 fir_count = 27;
     */
    firCount: number;
    /**
     * @generated from field: uint32 pli_count = 28;
     */
    pliCount: number;
    /**
     * @generated from field: double total_processing_delay = 29;
     */
    totalProcessingDelay: number;
    /**
     * @generated from field: double estimated_playout_timestamp = 30;
     */
    estimatedPlayoutTimestamp: number;
    /**
     * @generated from field: double jitter_buffer_delay = 31;
     */
    jitterBufferDelay: number;
    /**
     * @generated from field: double jitter_buffer_target_delay = 32;
     */
    jitterBufferTargetDelay: number;
    /**
     * @generated from field: uint64 jitter_buffer_emitted_count = 33;
     */
    jitterBufferEmittedCount: bigint;
    /**
     * @generated from field: double jitter_buffer_minimum_delay = 34;
     */
    jitterBufferMinimumDelay: number;
    /**
     * @generated from field: uint64 total_samples_received = 35;
     */
    totalSamplesReceived: bigint;
    /**
     * @generated from field: uint64 concealed_samples = 36;
     */
    concealedSamples: bigint;
    /**
     * @generated from field: uint64 silent_concealed_samples = 37;
     */
    silentConcealedSamples: bigint;
    /**
     * @generated from field: uint64 concealment_events = 38;
     */
    concealmentEvents: bigint;
    /**
     * @generated from field: uint64 inserted_samples_for_deceleration = 39;
     */
    insertedSamplesForDeceleration: bigint;
    /**
     * @generated from field: uint64 removed_samples_for_acceleration = 40;
     */
    removedSamplesForAcceleration: bigint;
    /**
     * @generated from field: double audio_level = 41;
     */
    audioLevel: number;
    /**
     * @generated from field: double total_audio_energy = 42;
     */
    totalAudioEnergy: number;
    /**
     * @generated from field: double total_samples_duration = 43;
     */
    totalSamplesDuration: number;
    /**
     * @generated from field: uint64 frames_received = 44;
     */
    framesReceived: bigint;
    /**
     * @generated from field: string decoder_implementation = 45;
     */
    decoderImplementation: string;
    /**
     * @generated from field: string playout_id = 46;
     */
    playoutId: string;
    /**
     * @generated from field: bool power_efficient_decoder = 47;
     */
    powerEfficientDecoder: boolean;
    /**
     * @generated from field: uint64 frames_assembled_from_multiple_packets = 48;
     */
    framesAssembledFromMultiplePackets: bigint;
    /**
     * @generated from field: double total_assembly_time = 49;
     */
    totalAssemblyTime: number;
    /**
     * @generated from field: uint64 retransmitted_packets_received = 50;
     */
    retransmittedPacketsReceived: bigint;
    /**
     * @generated from field: uint64 retransmitted_bytes_received = 51;
     */
    retransmittedBytesReceived: bigint;
    /**
     * @generated from field: uint32 rtx_ssrc = 52;
     */
    rtxSsrc: number;
    /**
     * @generated from field: uint32 fec_ssrc = 53;
     */
    fecSsrc: number;
    constructor(data?: PartialMessage<InboundRtpStreamStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.InboundRtpStreamStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InboundRtpStreamStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InboundRtpStreamStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InboundRtpStreamStats;
    static equals(a: InboundRtpStreamStats | PlainMessage<InboundRtpStreamStats> | undefined, b: InboundRtpStreamStats | PlainMessage<InboundRtpStreamStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.SentRtpStreamStats
 */
export declare class SentRtpStreamStats extends Message<SentRtpStreamStats> {
    /**
     * @generated from field: uint64 packets_sent = 1;
     */
    packetsSent: bigint;
    /**
     * @generated from field: uint64 bytes_sent = 2;
     */
    bytesSent: bigint;
    constructor(data?: PartialMessage<SentRtpStreamStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.SentRtpStreamStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentRtpStreamStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentRtpStreamStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentRtpStreamStats;
    static equals(a: SentRtpStreamStats | PlainMessage<SentRtpStreamStats> | undefined, b: SentRtpStreamStats | PlainMessage<SentRtpStreamStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OutboundRtpStreamStats
 */
export declare class OutboundRtpStreamStats extends Message<OutboundRtpStreamStats> {
    /**
     * @generated from field: string mid = 1;
     */
    mid: string;
    /**
     * @generated from field: string media_source_id = 2;
     */
    mediaSourceId: string;
    /**
     * @generated from field: string remote_id = 3;
     */
    remoteId: string;
    /**
     * @generated from field: string rid = 4;
     */
    rid: string;
    /**
     * @generated from field: uint64 header_bytes_sent = 5;
     */
    headerBytesSent: bigint;
    /**
     * @generated from field: uint64 retransmitted_packets_sent = 6;
     */
    retransmittedPacketsSent: bigint;
    /**
     * @generated from field: uint64 retransmitted_bytes_sent = 7;
     */
    retransmittedBytesSent: bigint;
    /**
     * @generated from field: uint32 rtx_ssrc = 8;
     */
    rtxSsrc: number;
    /**
     * @generated from field: double target_bitrate = 9;
     */
    targetBitrate: number;
    /**
     * @generated from field: uint64 total_encoded_bytes_target = 10;
     */
    totalEncodedBytesTarget: bigint;
    /**
     * @generated from field: uint32 frame_width = 11;
     */
    frameWidth: number;
    /**
     * @generated from field: uint32 frame_height = 12;
     */
    frameHeight: number;
    /**
     * @generated from field: double frames_per_second = 13;
     */
    framesPerSecond: number;
    /**
     * @generated from field: uint32 frames_sent = 14;
     */
    framesSent: number;
    /**
     * @generated from field: uint32 huge_frames_sent = 15;
     */
    hugeFramesSent: number;
    /**
     * @generated from field: uint32 frames_encoded = 16;
     */
    framesEncoded: number;
    /**
     * @generated from field: uint32 key_frames_encoded = 17;
     */
    keyFramesEncoded: number;
    /**
     * @generated from field: uint64 qp_sum = 18;
     */
    qpSum: bigint;
    /**
     * @generated from field: double total_encode_time = 19;
     */
    totalEncodeTime: number;
    /**
     * @generated from field: double total_packet_send_delay = 20;
     */
    totalPacketSendDelay: number;
    /**
     * @generated from field: livekit.proto.QualityLimitationReason quality_limitation_reason = 21;
     */
    qualityLimitationReason: QualityLimitationReason;
    /**
     * @generated from field: map<string, double> quality_limitation_durations = 22;
     */
    qualityLimitationDurations: {
        [key: string]: number;
    };
    /**
     * @generated from field: uint32 quality_limitation_resolution_changes = 23;
     */
    qualityLimitationResolutionChanges: number;
    /**
     * @generated from field: uint32 nack_count = 24;
     */
    nackCount: number;
    /**
     * @generated from field: uint32 fir_count = 25;
     */
    firCount: number;
    /**
     * @generated from field: uint32 pli_count = 26;
     */
    pliCount: number;
    /**
     * @generated from field: string encoder_implementation = 27;
     */
    encoderImplementation: string;
    /**
     * @generated from field: bool power_efficient_encoder = 28;
     */
    powerEfficientEncoder: boolean;
    /**
     * @generated from field: bool active = 29;
     */
    active: boolean;
    /**
     * @generated from field: string scalibility_mode = 30;
     */
    scalibilityMode: string;
    constructor(data?: PartialMessage<OutboundRtpStreamStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.OutboundRtpStreamStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OutboundRtpStreamStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OutboundRtpStreamStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OutboundRtpStreamStats;
    static equals(a: OutboundRtpStreamStats | PlainMessage<OutboundRtpStreamStats> | undefined, b: OutboundRtpStreamStats | PlainMessage<OutboundRtpStreamStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RemoteInboundRtpStreamStats
 */
export declare class RemoteInboundRtpStreamStats extends Message<RemoteInboundRtpStreamStats> {
    /**
     * @generated from field: string local_id = 1;
     */
    localId: string;
    /**
     * @generated from field: double round_trip_time = 2;
     */
    roundTripTime: number;
    /**
     * @generated from field: double total_round_trip_time = 3;
     */
    totalRoundTripTime: number;
    /**
     * @generated from field: double fraction_lost = 4;
     */
    fractionLost: number;
    /**
     * @generated from field: uint64 round_trip_time_measurements = 5;
     */
    roundTripTimeMeasurements: bigint;
    constructor(data?: PartialMessage<RemoteInboundRtpStreamStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RemoteInboundRtpStreamStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoteInboundRtpStreamStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoteInboundRtpStreamStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoteInboundRtpStreamStats;
    static equals(a: RemoteInboundRtpStreamStats | PlainMessage<RemoteInboundRtpStreamStats> | undefined, b: RemoteInboundRtpStreamStats | PlainMessage<RemoteInboundRtpStreamStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RemoteOutboundRtpStreamStats
 */
export declare class RemoteOutboundRtpStreamStats extends Message<RemoteOutboundRtpStreamStats> {
    /**
     * @generated from field: string local_id = 1;
     */
    localId: string;
    /**
     * @generated from field: double remote_timestamp = 2;
     */
    remoteTimestamp: number;
    /**
     * @generated from field: uint64 reports_sent = 3;
     */
    reportsSent: bigint;
    /**
     * @generated from field: double round_trip_time = 4;
     */
    roundTripTime: number;
    /**
     * @generated from field: double total_round_trip_time = 5;
     */
    totalRoundTripTime: number;
    /**
     * @generated from field: uint64 round_trip_time_measurements = 6;
     */
    roundTripTimeMeasurements: bigint;
    constructor(data?: PartialMessage<RemoteOutboundRtpStreamStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RemoteOutboundRtpStreamStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoteOutboundRtpStreamStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoteOutboundRtpStreamStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoteOutboundRtpStreamStats;
    static equals(a: RemoteOutboundRtpStreamStats | PlainMessage<RemoteOutboundRtpStreamStats> | undefined, b: RemoteOutboundRtpStreamStats | PlainMessage<RemoteOutboundRtpStreamStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.MediaSourceStats
 */
export declare class MediaSourceStats extends Message<MediaSourceStats> {
    /**
     * @generated from field: string track_identifier = 1;
     */
    trackIdentifier: string;
    /**
     * @generated from field: string kind = 2;
     */
    kind: string;
    constructor(data?: PartialMessage<MediaSourceStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.MediaSourceStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MediaSourceStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MediaSourceStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MediaSourceStats;
    static equals(a: MediaSourceStats | PlainMessage<MediaSourceStats> | undefined, b: MediaSourceStats | PlainMessage<MediaSourceStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioSourceStats
 */
export declare class AudioSourceStats extends Message<AudioSourceStats> {
    /**
     * @generated from field: double audio_level = 1;
     */
    audioLevel: number;
    /**
     * @generated from field: double total_audio_energy = 2;
     */
    totalAudioEnergy: number;
    /**
     * @generated from field: double total_samples_duration = 3;
     */
    totalSamplesDuration: number;
    /**
     * @generated from field: double echo_return_loss = 4;
     */
    echoReturnLoss: number;
    /**
     * @generated from field: double echo_return_loss_enhancement = 5;
     */
    echoReturnLossEnhancement: number;
    /**
     * @generated from field: double dropped_samples_duration = 6;
     */
    droppedSamplesDuration: number;
    /**
     * @generated from field: uint32 dropped_samples_events = 7;
     */
    droppedSamplesEvents: number;
    /**
     * @generated from field: double total_capture_delay = 8;
     */
    totalCaptureDelay: number;
    /**
     * @generated from field: uint64 total_samples_captured = 9;
     */
    totalSamplesCaptured: bigint;
    constructor(data?: PartialMessage<AudioSourceStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.AudioSourceStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioSourceStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioSourceStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioSourceStats;
    static equals(a: AudioSourceStats | PlainMessage<AudioSourceStats> | undefined, b: AudioSourceStats | PlainMessage<AudioSourceStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.VideoSourceStats
 */
export declare class VideoSourceStats extends Message<VideoSourceStats> {
    /**
     * @generated from field: uint32 width = 1;
     */
    width: number;
    /**
     * @generated from field: uint32 height = 2;
     */
    height: number;
    /**
     * @generated from field: uint32 frames = 3;
     */
    frames: number;
    /**
     * @generated from field: double frames_per_second = 4;
     */
    framesPerSecond: number;
    constructor(data?: PartialMessage<VideoSourceStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.VideoSourceStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoSourceStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoSourceStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoSourceStats;
    static equals(a: VideoSourceStats | PlainMessage<VideoSourceStats> | undefined, b: VideoSourceStats | PlainMessage<VideoSourceStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioPlayoutStats
 */
export declare class AudioPlayoutStats extends Message<AudioPlayoutStats> {
    /**
     * @generated from field: string kind = 1;
     */
    kind: string;
    /**
     * @generated from field: double synthesized_samples_duration = 2;
     */
    synthesizedSamplesDuration: number;
    /**
     * @generated from field: uint32 synthesized_samples_events = 3;
     */
    synthesizedSamplesEvents: number;
    /**
     * @generated from field: double total_samples_duration = 4;
     */
    totalSamplesDuration: number;
    /**
     * @generated from field: double total_playout_delay = 5;
     */
    totalPlayoutDelay: number;
    /**
     * @generated from field: uint64 total_samples_count = 6;
     */
    totalSamplesCount: bigint;
    constructor(data?: PartialMessage<AudioPlayoutStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.AudioPlayoutStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioPlayoutStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioPlayoutStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioPlayoutStats;
    static equals(a: AudioPlayoutStats | PlainMessage<AudioPlayoutStats> | undefined, b: AudioPlayoutStats | PlainMessage<AudioPlayoutStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.PeerConnectionStats
 */
export declare class PeerConnectionStats extends Message<PeerConnectionStats> {
    /**
     * @generated from field: uint32 data_channels_opened = 1;
     */
    dataChannelsOpened: number;
    /**
     * @generated from field: uint32 data_channels_closed = 2;
     */
    dataChannelsClosed: number;
    constructor(data?: PartialMessage<PeerConnectionStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.PeerConnectionStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PeerConnectionStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PeerConnectionStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PeerConnectionStats;
    static equals(a: PeerConnectionStats | PlainMessage<PeerConnectionStats> | undefined, b: PeerConnectionStats | PlainMessage<PeerConnectionStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.DataChannelStats
 */
export declare class DataChannelStats extends Message<DataChannelStats> {
    /**
     * @generated from field: string label = 1;
     */
    label: string;
    /**
     * @generated from field: string protocol = 2;
     */
    protocol: string;
    /**
     * @generated from field: int32 data_channel_identifier = 3;
     */
    dataChannelIdentifier: number;
    /**
     * @generated from field: optional livekit.proto.DataChannelState state = 4;
     */
    state?: DataChannelState;
    /**
     * @generated from field: uint32 messages_sent = 5;
     */
    messagesSent: number;
    /**
     * @generated from field: uint64 bytes_sent = 6;
     */
    bytesSent: bigint;
    /**
     * @generated from field: uint32 messages_received = 7;
     */
    messagesReceived: number;
    /**
     * @generated from field: uint64 bytes_received = 8;
     */
    bytesReceived: bigint;
    constructor(data?: PartialMessage<DataChannelStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.DataChannelStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataChannelStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataChannelStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataChannelStats;
    static equals(a: DataChannelStats | PlainMessage<DataChannelStats> | undefined, b: DataChannelStats | PlainMessage<DataChannelStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.TransportStats
 */
export declare class TransportStats extends Message<TransportStats> {
    /**
     * @generated from field: uint64 packets_sent = 1;
     */
    packetsSent: bigint;
    /**
     * @generated from field: uint64 packets_received = 2;
     */
    packetsReceived: bigint;
    /**
     * @generated from field: uint64 bytes_sent = 3;
     */
    bytesSent: bigint;
    /**
     * @generated from field: uint64 bytes_received = 4;
     */
    bytesReceived: bigint;
    /**
     * @generated from field: livekit.proto.IceRole ice_role = 5;
     */
    iceRole: IceRole;
    /**
     * @generated from field: string ice_local_username_fragment = 6;
     */
    iceLocalUsernameFragment: string;
    /**
     * @generated from field: optional livekit.proto.DtlsTransportState dtls_state = 7;
     */
    dtlsState?: DtlsTransportState;
    /**
     * @generated from field: optional livekit.proto.IceTransportState ice_state = 8;
     */
    iceState?: IceTransportState;
    /**
     * @generated from field: string selected_candidate_pair_id = 9;
     */
    selectedCandidatePairId: string;
    /**
     * @generated from field: string local_certificate_id = 10;
     */
    localCertificateId: string;
    /**
     * @generated from field: string remote_certificate_id = 11;
     */
    remoteCertificateId: string;
    /**
     * @generated from field: string tls_version = 12;
     */
    tlsVersion: string;
    /**
     * @generated from field: string dtls_cipher = 13;
     */
    dtlsCipher: string;
    /**
     * @generated from field: livekit.proto.DtlsRole dtls_role = 14;
     */
    dtlsRole: DtlsRole;
    /**
     * @generated from field: string srtp_cipher = 15;
     */
    srtpCipher: string;
    /**
     * @generated from field: uint32 selected_candidate_pair_changes = 16;
     */
    selectedCandidatePairChanges: number;
    constructor(data?: PartialMessage<TransportStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.TransportStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransportStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransportStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransportStats;
    static equals(a: TransportStats | PlainMessage<TransportStats> | undefined, b: TransportStats | PlainMessage<TransportStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.CandidatePairStats
 */
export declare class CandidatePairStats extends Message<CandidatePairStats> {
    /**
     * @generated from field: string transport_id = 1;
     */
    transportId: string;
    /**
     * @generated from field: string local_candidate_id = 2;
     */
    localCandidateId: string;
    /**
     * @generated from field: string remote_candidate_id = 3;
     */
    remoteCandidateId: string;
    /**
     * @generated from field: optional livekit.proto.IceCandidatePairState state = 4;
     */
    state?: IceCandidatePairState;
    /**
     * @generated from field: bool nominated = 5;
     */
    nominated: boolean;
    /**
     * @generated from field: uint64 packets_sent = 6;
     */
    packetsSent: bigint;
    /**
     * @generated from field: uint64 packets_received = 7;
     */
    packetsReceived: bigint;
    /**
     * @generated from field: uint64 bytes_sent = 8;
     */
    bytesSent: bigint;
    /**
     * @generated from field: uint64 bytes_received = 9;
     */
    bytesReceived: bigint;
    /**
     * @generated from field: double last_packet_sent_timestamp = 10;
     */
    lastPacketSentTimestamp: number;
    /**
     * @generated from field: double last_packet_received_timestamp = 11;
     */
    lastPacketReceivedTimestamp: number;
    /**
     * @generated from field: double total_round_trip_time = 12;
     */
    totalRoundTripTime: number;
    /**
     * @generated from field: double current_round_trip_time = 13;
     */
    currentRoundTripTime: number;
    /**
     * @generated from field: double available_outgoing_bitrate = 14;
     */
    availableOutgoingBitrate: number;
    /**
     * @generated from field: double available_incoming_bitrate = 15;
     */
    availableIncomingBitrate: number;
    /**
     * @generated from field: uint64 requests_received = 16;
     */
    requestsReceived: bigint;
    /**
     * @generated from field: uint64 requests_sent = 17;
     */
    requestsSent: bigint;
    /**
     * @generated from field: uint64 responses_received = 18;
     */
    responsesReceived: bigint;
    /**
     * @generated from field: uint64 responses_sent = 19;
     */
    responsesSent: bigint;
    /**
     * @generated from field: uint64 consent_requests_sent = 20;
     */
    consentRequestsSent: bigint;
    /**
     * @generated from field: uint32 packets_discarded_on_send = 21;
     */
    packetsDiscardedOnSend: number;
    /**
     * @generated from field: uint64 bytes_discarded_on_send = 22;
     */
    bytesDiscardedOnSend: bigint;
    constructor(data?: PartialMessage<CandidatePairStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.CandidatePairStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CandidatePairStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CandidatePairStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CandidatePairStats;
    static equals(a: CandidatePairStats | PlainMessage<CandidatePairStats> | undefined, b: CandidatePairStats | PlainMessage<CandidatePairStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.IceCandidateStats
 */
export declare class IceCandidateStats extends Message<IceCandidateStats> {
    /**
     * @generated from field: string transport_id = 1;
     */
    transportId: string;
    /**
     * @generated from field: string address = 2;
     */
    address: string;
    /**
     * @generated from field: int32 port = 3;
     */
    port: number;
    /**
     * @generated from field: string protocol = 4;
     */
    protocol: string;
    /**
     * @generated from field: optional livekit.proto.IceCandidateType candidate_type = 5;
     */
    candidateType?: IceCandidateType;
    /**
     * @generated from field: int32 priority = 6;
     */
    priority: number;
    /**
     * @generated from field: string url = 7;
     */
    url: string;
    /**
     * @generated from field: optional livekit.proto.IceServerTransportProtocol relay_protocol = 8;
     */
    relayProtocol?: IceServerTransportProtocol;
    /**
     * @generated from field: string foundation = 9;
     */
    foundation: string;
    /**
     * @generated from field: string related_address = 10;
     */
    relatedAddress: string;
    /**
     * @generated from field: int32 related_port = 11;
     */
    relatedPort: number;
    /**
     * @generated from field: string username_fragment = 12;
     */
    usernameFragment: string;
    /**
     * @generated from field: optional livekit.proto.IceTcpCandidateType tcp_type = 13;
     */
    tcpType?: IceTcpCandidateType;
    constructor(data?: PartialMessage<IceCandidateStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.IceCandidateStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IceCandidateStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IceCandidateStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IceCandidateStats;
    static equals(a: IceCandidateStats | PlainMessage<IceCandidateStats> | undefined, b: IceCandidateStats | PlainMessage<IceCandidateStats> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.CertificateStats
 */
export declare class CertificateStats extends Message<CertificateStats> {
    /**
     * @generated from field: string fingerprint = 1;
     */
    fingerprint: string;
    /**
     * @generated from field: string fingerprint_algorithm = 2;
     */
    fingerprintAlgorithm: string;
    /**
     * @generated from field: string base64_certificate = 3;
     */
    base64Certificate: string;
    /**
     * @generated from field: string issuer_certificate_id = 4;
     */
    issuerCertificateId: string;
    constructor(data?: PartialMessage<CertificateStats>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.CertificateStats";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CertificateStats;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CertificateStats;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CertificateStats;
    static equals(a: CertificateStats | PlainMessage<CertificateStats> | undefined, b: CertificateStats | PlainMessage<CertificateStats> | undefined): boolean;
}
//# sourceMappingURL=stats_pb.d.ts.map