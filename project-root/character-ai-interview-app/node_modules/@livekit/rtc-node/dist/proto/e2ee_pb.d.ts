import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * @generated from enum livekit.proto.EncryptionType
 */
export declare enum EncryptionType {
    /**
     * @generated from enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from enum value: GCM = 1;
     */
    GCM = 1,
    /**
     * @generated from enum value: CUSTOM = 2;
     */
    CUSTOM = 2
}
/**
 * @generated from enum livekit.proto.EncryptionState
 */
export declare enum EncryptionState {
    /**
     * @generated from enum value: NEW = 0;
     */
    NEW = 0,
    /**
     * @generated from enum value: OK = 1;
     */
    OK = 1,
    /**
     * @generated from enum value: ENCRYPTION_FAILED = 2;
     */
    ENCRYPTION_FAILED = 2,
    /**
     * @generated from enum value: DECRYPTION_FAILED = 3;
     */
    DECRYPTION_FAILED = 3,
    /**
     * @generated from enum value: MISSING_KEY = 4;
     */
    MISSING_KEY = 4,
    /**
     * @generated from enum value: KEY_RATCHETED = 5;
     */
    KEY_RATCHETED = 5,
    /**
     * @generated from enum value: INTERNAL_ERROR = 6;
     */
    INTERNAL_ERROR = 6
}
/**
 * @generated from message livekit.proto.FrameCryptor
 */
export declare class FrameCryptor extends Message<FrameCryptor> {
    /**
     * @generated from field: string participant_identity = 1;
     */
    participantIdentity: string;
    /**
     * @generated from field: string track_sid = 2;
     */
    trackSid: string;
    /**
     * @generated from field: int32 key_index = 3;
     */
    keyIndex: number;
    /**
     * @generated from field: bool enabled = 4;
     */
    enabled: boolean;
    constructor(data?: PartialMessage<FrameCryptor>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.FrameCryptor";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptor;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptor;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptor;
    static equals(a: FrameCryptor | PlainMessage<FrameCryptor> | undefined, b: FrameCryptor | PlainMessage<FrameCryptor> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.KeyProviderOptions
 */
export declare class KeyProviderOptions extends Message<KeyProviderOptions> {
    /**
     * Only specify if you want to use a shared_key
     *
     * @generated from field: optional bytes shared_key = 1;
     */
    sharedKey?: Uint8Array;
    /**
     * @generated from field: int32 ratchet_window_size = 2;
     */
    ratchetWindowSize: number;
    /**
     * @generated from field: bytes ratchet_salt = 3;
     */
    ratchetSalt: Uint8Array;
    /**
     * -1 = no tolerence
     *
     * @generated from field: int32 failure_tolerance = 4;
     */
    failureTolerance: number;
    constructor(data?: PartialMessage<KeyProviderOptions>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.KeyProviderOptions";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyProviderOptions;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyProviderOptions;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyProviderOptions;
    static equals(a: KeyProviderOptions | PlainMessage<KeyProviderOptions> | undefined, b: KeyProviderOptions | PlainMessage<KeyProviderOptions> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.E2eeOptions
 */
export declare class E2eeOptions extends Message<E2eeOptions> {
    /**
     * @generated from field: livekit.proto.EncryptionType encryption_type = 1;
     */
    encryptionType: EncryptionType;
    /**
     * @generated from field: livekit.proto.KeyProviderOptions key_provider_options = 2;
     */
    keyProviderOptions?: KeyProviderOptions;
    constructor(data?: PartialMessage<E2eeOptions>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.E2eeOptions";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeOptions;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeOptions;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeOptions;
    static equals(a: E2eeOptions | PlainMessage<E2eeOptions> | undefined, b: E2eeOptions | PlainMessage<E2eeOptions> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.E2eeManagerSetEnabledRequest
 */
export declare class E2eeManagerSetEnabledRequest extends Message<E2eeManagerSetEnabledRequest> {
    /**
     * @generated from field: bool enabled = 1;
     */
    enabled: boolean;
    constructor(data?: PartialMessage<E2eeManagerSetEnabledRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.E2eeManagerSetEnabledRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeManagerSetEnabledRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeManagerSetEnabledRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeManagerSetEnabledRequest;
    static equals(a: E2eeManagerSetEnabledRequest | PlainMessage<E2eeManagerSetEnabledRequest> | undefined, b: E2eeManagerSetEnabledRequest | PlainMessage<E2eeManagerSetEnabledRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.E2eeManagerSetEnabledResponse
 */
export declare class E2eeManagerSetEnabledResponse extends Message<E2eeManagerSetEnabledResponse> {
    constructor(data?: PartialMessage<E2eeManagerSetEnabledResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.E2eeManagerSetEnabledResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeManagerSetEnabledResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeManagerSetEnabledResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeManagerSetEnabledResponse;
    static equals(a: E2eeManagerSetEnabledResponse | PlainMessage<E2eeManagerSetEnabledResponse> | undefined, b: E2eeManagerSetEnabledResponse | PlainMessage<E2eeManagerSetEnabledResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.E2eeManagerGetFrameCryptorsRequest
 */
export declare class E2eeManagerGetFrameCryptorsRequest extends Message<E2eeManagerGetFrameCryptorsRequest> {
    constructor(data?: PartialMessage<E2eeManagerGetFrameCryptorsRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.E2eeManagerGetFrameCryptorsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeManagerGetFrameCryptorsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeManagerGetFrameCryptorsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeManagerGetFrameCryptorsRequest;
    static equals(a: E2eeManagerGetFrameCryptorsRequest | PlainMessage<E2eeManagerGetFrameCryptorsRequest> | undefined, b: E2eeManagerGetFrameCryptorsRequest | PlainMessage<E2eeManagerGetFrameCryptorsRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.E2eeManagerGetFrameCryptorsResponse
 */
export declare class E2eeManagerGetFrameCryptorsResponse extends Message<E2eeManagerGetFrameCryptorsResponse> {
    /**
     * @generated from field: repeated livekit.proto.FrameCryptor frame_cryptors = 1;
     */
    frameCryptors: FrameCryptor[];
    constructor(data?: PartialMessage<E2eeManagerGetFrameCryptorsResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.E2eeManagerGetFrameCryptorsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeManagerGetFrameCryptorsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeManagerGetFrameCryptorsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeManagerGetFrameCryptorsResponse;
    static equals(a: E2eeManagerGetFrameCryptorsResponse | PlainMessage<E2eeManagerGetFrameCryptorsResponse> | undefined, b: E2eeManagerGetFrameCryptorsResponse | PlainMessage<E2eeManagerGetFrameCryptorsResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.FrameCryptorSetEnabledRequest
 */
export declare class FrameCryptorSetEnabledRequest extends Message<FrameCryptorSetEnabledRequest> {
    /**
     * @generated from field: string participant_identity = 1;
     */
    participantIdentity: string;
    /**
     * @generated from field: string track_sid = 2;
     */
    trackSid: string;
    /**
     * @generated from field: bool enabled = 3;
     */
    enabled: boolean;
    constructor(data?: PartialMessage<FrameCryptorSetEnabledRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.FrameCryptorSetEnabledRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptorSetEnabledRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptorSetEnabledRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptorSetEnabledRequest;
    static equals(a: FrameCryptorSetEnabledRequest | PlainMessage<FrameCryptorSetEnabledRequest> | undefined, b: FrameCryptorSetEnabledRequest | PlainMessage<FrameCryptorSetEnabledRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.FrameCryptorSetEnabledResponse
 */
export declare class FrameCryptorSetEnabledResponse extends Message<FrameCryptorSetEnabledResponse> {
    constructor(data?: PartialMessage<FrameCryptorSetEnabledResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.FrameCryptorSetEnabledResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptorSetEnabledResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptorSetEnabledResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptorSetEnabledResponse;
    static equals(a: FrameCryptorSetEnabledResponse | PlainMessage<FrameCryptorSetEnabledResponse> | undefined, b: FrameCryptorSetEnabledResponse | PlainMessage<FrameCryptorSetEnabledResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.FrameCryptorSetKeyIndexRequest
 */
export declare class FrameCryptorSetKeyIndexRequest extends Message<FrameCryptorSetKeyIndexRequest> {
    /**
     * @generated from field: string participant_identity = 1;
     */
    participantIdentity: string;
    /**
     * @generated from field: string track_sid = 2;
     */
    trackSid: string;
    /**
     * @generated from field: int32 key_index = 3;
     */
    keyIndex: number;
    constructor(data?: PartialMessage<FrameCryptorSetKeyIndexRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.FrameCryptorSetKeyIndexRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptorSetKeyIndexRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptorSetKeyIndexRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptorSetKeyIndexRequest;
    static equals(a: FrameCryptorSetKeyIndexRequest | PlainMessage<FrameCryptorSetKeyIndexRequest> | undefined, b: FrameCryptorSetKeyIndexRequest | PlainMessage<FrameCryptorSetKeyIndexRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.FrameCryptorSetKeyIndexResponse
 */
export declare class FrameCryptorSetKeyIndexResponse extends Message<FrameCryptorSetKeyIndexResponse> {
    constructor(data?: PartialMessage<FrameCryptorSetKeyIndexResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.FrameCryptorSetKeyIndexResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptorSetKeyIndexResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptorSetKeyIndexResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptorSetKeyIndexResponse;
    static equals(a: FrameCryptorSetKeyIndexResponse | PlainMessage<FrameCryptorSetKeyIndexResponse> | undefined, b: FrameCryptorSetKeyIndexResponse | PlainMessage<FrameCryptorSetKeyIndexResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.SetSharedKeyRequest
 */
export declare class SetSharedKeyRequest extends Message<SetSharedKeyRequest> {
    /**
     * @generated from field: bytes shared_key = 1;
     */
    sharedKey: Uint8Array;
    /**
     * @generated from field: int32 key_index = 2;
     */
    keyIndex: number;
    constructor(data?: PartialMessage<SetSharedKeyRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.SetSharedKeyRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetSharedKeyRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetSharedKeyRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetSharedKeyRequest;
    static equals(a: SetSharedKeyRequest | PlainMessage<SetSharedKeyRequest> | undefined, b: SetSharedKeyRequest | PlainMessage<SetSharedKeyRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.SetSharedKeyResponse
 */
export declare class SetSharedKeyResponse extends Message<SetSharedKeyResponse> {
    constructor(data?: PartialMessage<SetSharedKeyResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.SetSharedKeyResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetSharedKeyResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetSharedKeyResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetSharedKeyResponse;
    static equals(a: SetSharedKeyResponse | PlainMessage<SetSharedKeyResponse> | undefined, b: SetSharedKeyResponse | PlainMessage<SetSharedKeyResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RatchetSharedKeyRequest
 */
export declare class RatchetSharedKeyRequest extends Message<RatchetSharedKeyRequest> {
    /**
     * @generated from field: int32 key_index = 1;
     */
    keyIndex: number;
    constructor(data?: PartialMessage<RatchetSharedKeyRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RatchetSharedKeyRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatchetSharedKeyRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatchetSharedKeyRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatchetSharedKeyRequest;
    static equals(a: RatchetSharedKeyRequest | PlainMessage<RatchetSharedKeyRequest> | undefined, b: RatchetSharedKeyRequest | PlainMessage<RatchetSharedKeyRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RatchetSharedKeyResponse
 */
export declare class RatchetSharedKeyResponse extends Message<RatchetSharedKeyResponse> {
    /**
     * @generated from field: optional bytes new_key = 1;
     */
    newKey?: Uint8Array;
    constructor(data?: PartialMessage<RatchetSharedKeyResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RatchetSharedKeyResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatchetSharedKeyResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatchetSharedKeyResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatchetSharedKeyResponse;
    static equals(a: RatchetSharedKeyResponse | PlainMessage<RatchetSharedKeyResponse> | undefined, b: RatchetSharedKeyResponse | PlainMessage<RatchetSharedKeyResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetSharedKeyRequest
 */
export declare class GetSharedKeyRequest extends Message<GetSharedKeyRequest> {
    /**
     * @generated from field: int32 key_index = 1;
     */
    keyIndex: number;
    constructor(data?: PartialMessage<GetSharedKeyRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.GetSharedKeyRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSharedKeyRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSharedKeyRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSharedKeyRequest;
    static equals(a: GetSharedKeyRequest | PlainMessage<GetSharedKeyRequest> | undefined, b: GetSharedKeyRequest | PlainMessage<GetSharedKeyRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetSharedKeyResponse
 */
export declare class GetSharedKeyResponse extends Message<GetSharedKeyResponse> {
    /**
     * @generated from field: optional bytes key = 1;
     */
    key?: Uint8Array;
    constructor(data?: PartialMessage<GetSharedKeyResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.GetSharedKeyResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSharedKeyResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSharedKeyResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSharedKeyResponse;
    static equals(a: GetSharedKeyResponse | PlainMessage<GetSharedKeyResponse> | undefined, b: GetSharedKeyResponse | PlainMessage<GetSharedKeyResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.SetKeyRequest
 */
export declare class SetKeyRequest extends Message<SetKeyRequest> {
    /**
     * @generated from field: string participant_identity = 1;
     */
    participantIdentity: string;
    /**
     * @generated from field: bytes key = 2;
     */
    key: Uint8Array;
    /**
     * @generated from field: int32 key_index = 3;
     */
    keyIndex: number;
    constructor(data?: PartialMessage<SetKeyRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.SetKeyRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetKeyRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetKeyRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetKeyRequest;
    static equals(a: SetKeyRequest | PlainMessage<SetKeyRequest> | undefined, b: SetKeyRequest | PlainMessage<SetKeyRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.SetKeyResponse
 */
export declare class SetKeyResponse extends Message<SetKeyResponse> {
    constructor(data?: PartialMessage<SetKeyResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.SetKeyResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetKeyResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetKeyResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetKeyResponse;
    static equals(a: SetKeyResponse | PlainMessage<SetKeyResponse> | undefined, b: SetKeyResponse | PlainMessage<SetKeyResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RatchetKeyRequest
 */
export declare class RatchetKeyRequest extends Message<RatchetKeyRequest> {
    /**
     * @generated from field: string participant_identity = 1;
     */
    participantIdentity: string;
    /**
     * @generated from field: int32 key_index = 2;
     */
    keyIndex: number;
    constructor(data?: PartialMessage<RatchetKeyRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RatchetKeyRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatchetKeyRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatchetKeyRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatchetKeyRequest;
    static equals(a: RatchetKeyRequest | PlainMessage<RatchetKeyRequest> | undefined, b: RatchetKeyRequest | PlainMessage<RatchetKeyRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RatchetKeyResponse
 */
export declare class RatchetKeyResponse extends Message<RatchetKeyResponse> {
    /**
     * @generated from field: optional bytes new_key = 1;
     */
    newKey?: Uint8Array;
    constructor(data?: PartialMessage<RatchetKeyResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.RatchetKeyResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatchetKeyResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatchetKeyResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatchetKeyResponse;
    static equals(a: RatchetKeyResponse | PlainMessage<RatchetKeyResponse> | undefined, b: RatchetKeyResponse | PlainMessage<RatchetKeyResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetKeyRequest
 */
export declare class GetKeyRequest extends Message<GetKeyRequest> {
    /**
     * @generated from field: string participant_identity = 1;
     */
    participantIdentity: string;
    /**
     * @generated from field: int32 key_index = 2;
     */
    keyIndex: number;
    constructor(data?: PartialMessage<GetKeyRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.GetKeyRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyRequest;
    static equals(a: GetKeyRequest | PlainMessage<GetKeyRequest> | undefined, b: GetKeyRequest | PlainMessage<GetKeyRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetKeyResponse
 */
export declare class GetKeyResponse extends Message<GetKeyResponse> {
    /**
     * @generated from field: optional bytes key = 1;
     */
    key?: Uint8Array;
    constructor(data?: PartialMessage<GetKeyResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.GetKeyResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyResponse;
    static equals(a: GetKeyResponse | PlainMessage<GetKeyResponse> | undefined, b: GetKeyResponse | PlainMessage<GetKeyResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.E2eeRequest
 */
export declare class E2eeRequest extends Message<E2eeRequest> {
    /**
     * @generated from field: uint64 room_handle = 1;
     */
    roomHandle: bigint;
    /**
     * @generated from oneof livekit.proto.E2eeRequest.message
     */
    message: {
        /**
         * @generated from field: livekit.proto.E2eeManagerSetEnabledRequest manager_set_enabled = 2;
         */
        value: E2eeManagerSetEnabledRequest;
        case: "managerSetEnabled";
    } | {
        /**
         * @generated from field: livekit.proto.E2eeManagerGetFrameCryptorsRequest manager_get_frame_cryptors = 3;
         */
        value: E2eeManagerGetFrameCryptorsRequest;
        case: "managerGetFrameCryptors";
    } | {
        /**
         * @generated from field: livekit.proto.FrameCryptorSetEnabledRequest cryptor_set_enabled = 4;
         */
        value: FrameCryptorSetEnabledRequest;
        case: "cryptorSetEnabled";
    } | {
        /**
         * @generated from field: livekit.proto.FrameCryptorSetKeyIndexRequest cryptor_set_key_index = 5;
         */
        value: FrameCryptorSetKeyIndexRequest;
        case: "cryptorSetKeyIndex";
    } | {
        /**
         * @generated from field: livekit.proto.SetSharedKeyRequest set_shared_key = 6;
         */
        value: SetSharedKeyRequest;
        case: "setSharedKey";
    } | {
        /**
         * @generated from field: livekit.proto.RatchetSharedKeyRequest ratchet_shared_key = 7;
         */
        value: RatchetSharedKeyRequest;
        case: "ratchetSharedKey";
    } | {
        /**
         * @generated from field: livekit.proto.GetSharedKeyRequest get_shared_key = 8;
         */
        value: GetSharedKeyRequest;
        case: "getSharedKey";
    } | {
        /**
         * @generated from field: livekit.proto.SetKeyRequest set_key = 9;
         */
        value: SetKeyRequest;
        case: "setKey";
    } | {
        /**
         * @generated from field: livekit.proto.RatchetKeyRequest ratchet_key = 10;
         */
        value: RatchetKeyRequest;
        case: "ratchetKey";
    } | {
        /**
         * @generated from field: livekit.proto.GetKeyRequest get_key = 11;
         */
        value: GetKeyRequest;
        case: "getKey";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<E2eeRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.E2eeRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeRequest;
    static equals(a: E2eeRequest | PlainMessage<E2eeRequest> | undefined, b: E2eeRequest | PlainMessage<E2eeRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.E2eeResponse
 */
export declare class E2eeResponse extends Message<E2eeResponse> {
    /**
     * @generated from oneof livekit.proto.E2eeResponse.message
     */
    message: {
        /**
         * @generated from field: livekit.proto.E2eeManagerSetEnabledResponse manager_set_enabled = 1;
         */
        value: E2eeManagerSetEnabledResponse;
        case: "managerSetEnabled";
    } | {
        /**
         * @generated from field: livekit.proto.E2eeManagerGetFrameCryptorsResponse manager_get_frame_cryptors = 2;
         */
        value: E2eeManagerGetFrameCryptorsResponse;
        case: "managerGetFrameCryptors";
    } | {
        /**
         * @generated from field: livekit.proto.FrameCryptorSetEnabledResponse cryptor_set_enabled = 3;
         */
        value: FrameCryptorSetEnabledResponse;
        case: "cryptorSetEnabled";
    } | {
        /**
         * @generated from field: livekit.proto.FrameCryptorSetKeyIndexResponse cryptor_set_key_index = 4;
         */
        value: FrameCryptorSetKeyIndexResponse;
        case: "cryptorSetKeyIndex";
    } | {
        /**
         * @generated from field: livekit.proto.SetSharedKeyResponse set_shared_key = 5;
         */
        value: SetSharedKeyResponse;
        case: "setSharedKey";
    } | {
        /**
         * @generated from field: livekit.proto.RatchetSharedKeyResponse ratchet_shared_key = 6;
         */
        value: RatchetSharedKeyResponse;
        case: "ratchetSharedKey";
    } | {
        /**
         * @generated from field: livekit.proto.GetSharedKeyResponse get_shared_key = 7;
         */
        value: GetSharedKeyResponse;
        case: "getSharedKey";
    } | {
        /**
         * @generated from field: livekit.proto.SetKeyResponse set_key = 8;
         */
        value: SetKeyResponse;
        case: "setKey";
    } | {
        /**
         * @generated from field: livekit.proto.RatchetKeyResponse ratchet_key = 9;
         */
        value: RatchetKeyResponse;
        case: "ratchetKey";
    } | {
        /**
         * @generated from field: livekit.proto.GetKeyResponse get_key = 10;
         */
        value: GetKeyResponse;
        case: "getKey";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<E2eeResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "livekit.proto.E2eeResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeResponse;
    static equals(a: E2eeResponse | PlainMessage<E2eeResponse> | undefined, b: E2eeResponse | PlainMessage<E2eeResponse> | undefined): boolean;
}
//# sourceMappingURL=e2ee_pb.d.ts.map