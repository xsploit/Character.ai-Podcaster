// Copyright 2023 LiveKit, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
import { Message, proto3 } from "@bufbuild/protobuf";
import { FfiOwnedHandle } from "./handle_pb.js";
/**
 * @generated from message livekit.proto.ParticipantInfo
 */
export class ParticipantInfo extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sid = 1;
         */
        this.sid = "";
        /**
         * @generated from field: string name = 2;
         */
        this.name = "";
        /**
         * @generated from field: string identity = 3;
         */
        this.identity = "";
        /**
         * @generated from field: string metadata = 4;
         */
        this.metadata = "";
        /**
         * @generated from field: map<string, string> attributes = 5;
         */
        this.attributes = {};
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ParticipantInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ParticipantInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ParticipantInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ParticipantInfo, a, b);
    }
}
ParticipantInfo.runtime = proto3;
ParticipantInfo.typeName = "livekit.proto.ParticipantInfo";
ParticipantInfo.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "metadata", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "attributes", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "scalar", T: 9 /* ScalarType.STRING */ } },
]);
/**
 * @generated from message livekit.proto.OwnedParticipant
 */
export class OwnedParticipant extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new OwnedParticipant().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OwnedParticipant().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OwnedParticipant().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(OwnedParticipant, a, b);
    }
}
OwnedParticipant.runtime = proto3;
OwnedParticipant.typeName = "livekit.proto.OwnedParticipant";
OwnedParticipant.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "handle", kind: "message", T: FfiOwnedHandle },
    { no: 2, name: "info", kind: "message", T: ParticipantInfo },
]);
//# sourceMappingURL=participant_pb.js.map