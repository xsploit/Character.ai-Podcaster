// Copyright 2023 LiveKit, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
/**
 * @generated from enum livekit.proto.DataChannelState
 */
export var DataChannelState;
(function (DataChannelState) {
    /**
     * @generated from enum value: DC_CONNECTING = 0;
     */
    DataChannelState[DataChannelState["DC_CONNECTING"] = 0] = "DC_CONNECTING";
    /**
     * @generated from enum value: DC_OPEN = 1;
     */
    DataChannelState[DataChannelState["DC_OPEN"] = 1] = "DC_OPEN";
    /**
     * @generated from enum value: DC_CLOSING = 2;
     */
    DataChannelState[DataChannelState["DC_CLOSING"] = 2] = "DC_CLOSING";
    /**
     * @generated from enum value: DC_CLOSED = 3;
     */
    DataChannelState[DataChannelState["DC_CLOSED"] = 3] = "DC_CLOSED";
})(DataChannelState || (DataChannelState = {}));
// Retrieve enum metadata with: proto3.getEnumType(DataChannelState)
proto3.util.setEnumType(DataChannelState, "livekit.proto.DataChannelState", [
    { no: 0, name: "DC_CONNECTING" },
    { no: 1, name: "DC_OPEN" },
    { no: 2, name: "DC_CLOSING" },
    { no: 3, name: "DC_CLOSED" },
]);
/**
 * @generated from enum livekit.proto.QualityLimitationReason
 */
export var QualityLimitationReason;
(function (QualityLimitationReason) {
    /**
     * @generated from enum value: LIMITATION_NONE = 0;
     */
    QualityLimitationReason[QualityLimitationReason["LIMITATION_NONE"] = 0] = "LIMITATION_NONE";
    /**
     * @generated from enum value: LIMITATION_CPU = 1;
     */
    QualityLimitationReason[QualityLimitationReason["LIMITATION_CPU"] = 1] = "LIMITATION_CPU";
    /**
     * @generated from enum value: LIMITATION_BANDWIDTH = 2;
     */
    QualityLimitationReason[QualityLimitationReason["LIMITATION_BANDWIDTH"] = 2] = "LIMITATION_BANDWIDTH";
    /**
     * @generated from enum value: LIMITATION_OTHER = 3;
     */
    QualityLimitationReason[QualityLimitationReason["LIMITATION_OTHER"] = 3] = "LIMITATION_OTHER";
})(QualityLimitationReason || (QualityLimitationReason = {}));
// Retrieve enum metadata with: proto3.getEnumType(QualityLimitationReason)
proto3.util.setEnumType(QualityLimitationReason, "livekit.proto.QualityLimitationReason", [
    { no: 0, name: "LIMITATION_NONE" },
    { no: 1, name: "LIMITATION_CPU" },
    { no: 2, name: "LIMITATION_BANDWIDTH" },
    { no: 3, name: "LIMITATION_OTHER" },
]);
/**
 * @generated from enum livekit.proto.IceRole
 */
export var IceRole;
(function (IceRole) {
    /**
     * @generated from enum value: ICE_UNKNOWN = 0;
     */
    IceRole[IceRole["ICE_UNKNOWN"] = 0] = "ICE_UNKNOWN";
    /**
     * @generated from enum value: ICE_CONTROLLING = 1;
     */
    IceRole[IceRole["ICE_CONTROLLING"] = 1] = "ICE_CONTROLLING";
    /**
     * @generated from enum value: ICE_CONTROLLED = 2;
     */
    IceRole[IceRole["ICE_CONTROLLED"] = 2] = "ICE_CONTROLLED";
})(IceRole || (IceRole = {}));
// Retrieve enum metadata with: proto3.getEnumType(IceRole)
proto3.util.setEnumType(IceRole, "livekit.proto.IceRole", [
    { no: 0, name: "ICE_UNKNOWN" },
    { no: 1, name: "ICE_CONTROLLING" },
    { no: 2, name: "ICE_CONTROLLED" },
]);
/**
 * @generated from enum livekit.proto.DtlsTransportState
 */
export var DtlsTransportState;
(function (DtlsTransportState) {
    /**
     * @generated from enum value: DTLS_TRANSPORT_NEW = 0;
     */
    DtlsTransportState[DtlsTransportState["DTLS_TRANSPORT_NEW"] = 0] = "DTLS_TRANSPORT_NEW";
    /**
     * @generated from enum value: DTLS_TRANSPORT_CONNECTING = 1;
     */
    DtlsTransportState[DtlsTransportState["DTLS_TRANSPORT_CONNECTING"] = 1] = "DTLS_TRANSPORT_CONNECTING";
    /**
     * @generated from enum value: DTLS_TRANSPORT_CONNECTED = 2;
     */
    DtlsTransportState[DtlsTransportState["DTLS_TRANSPORT_CONNECTED"] = 2] = "DTLS_TRANSPORT_CONNECTED";
    /**
     * @generated from enum value: DTLS_TRANSPORT_CLOSED = 3;
     */
    DtlsTransportState[DtlsTransportState["DTLS_TRANSPORT_CLOSED"] = 3] = "DTLS_TRANSPORT_CLOSED";
    /**
     * @generated from enum value: DTLS_TRANSPORT_FAILED = 4;
     */
    DtlsTransportState[DtlsTransportState["DTLS_TRANSPORT_FAILED"] = 4] = "DTLS_TRANSPORT_FAILED";
})(DtlsTransportState || (DtlsTransportState = {}));
// Retrieve enum metadata with: proto3.getEnumType(DtlsTransportState)
proto3.util.setEnumType(DtlsTransportState, "livekit.proto.DtlsTransportState", [
    { no: 0, name: "DTLS_TRANSPORT_NEW" },
    { no: 1, name: "DTLS_TRANSPORT_CONNECTING" },
    { no: 2, name: "DTLS_TRANSPORT_CONNECTED" },
    { no: 3, name: "DTLS_TRANSPORT_CLOSED" },
    { no: 4, name: "DTLS_TRANSPORT_FAILED" },
]);
/**
 * @generated from enum livekit.proto.IceTransportState
 */
export var IceTransportState;
(function (IceTransportState) {
    /**
     * @generated from enum value: ICE_TRANSPORT_NEW = 0;
     */
    IceTransportState[IceTransportState["ICE_TRANSPORT_NEW"] = 0] = "ICE_TRANSPORT_NEW";
    /**
     * @generated from enum value: ICE_TRANSPORT_CHECKING = 1;
     */
    IceTransportState[IceTransportState["ICE_TRANSPORT_CHECKING"] = 1] = "ICE_TRANSPORT_CHECKING";
    /**
     * @generated from enum value: ICE_TRANSPORT_CONNECTED = 2;
     */
    IceTransportState[IceTransportState["ICE_TRANSPORT_CONNECTED"] = 2] = "ICE_TRANSPORT_CONNECTED";
    /**
     * @generated from enum value: ICE_TRANSPORT_COMPLETED = 3;
     */
    IceTransportState[IceTransportState["ICE_TRANSPORT_COMPLETED"] = 3] = "ICE_TRANSPORT_COMPLETED";
    /**
     * @generated from enum value: ICE_TRANSPORT_DISCONNECTED = 4;
     */
    IceTransportState[IceTransportState["ICE_TRANSPORT_DISCONNECTED"] = 4] = "ICE_TRANSPORT_DISCONNECTED";
    /**
     * @generated from enum value: ICE_TRANSPORT_FAILED = 5;
     */
    IceTransportState[IceTransportState["ICE_TRANSPORT_FAILED"] = 5] = "ICE_TRANSPORT_FAILED";
    /**
     * @generated from enum value: ICE_TRANSPORT_CLOSED = 6;
     */
    IceTransportState[IceTransportState["ICE_TRANSPORT_CLOSED"] = 6] = "ICE_TRANSPORT_CLOSED";
})(IceTransportState || (IceTransportState = {}));
// Retrieve enum metadata with: proto3.getEnumType(IceTransportState)
proto3.util.setEnumType(IceTransportState, "livekit.proto.IceTransportState", [
    { no: 0, name: "ICE_TRANSPORT_NEW" },
    { no: 1, name: "ICE_TRANSPORT_CHECKING" },
    { no: 2, name: "ICE_TRANSPORT_CONNECTED" },
    { no: 3, name: "ICE_TRANSPORT_COMPLETED" },
    { no: 4, name: "ICE_TRANSPORT_DISCONNECTED" },
    { no: 5, name: "ICE_TRANSPORT_FAILED" },
    { no: 6, name: "ICE_TRANSPORT_CLOSED" },
]);
/**
 * @generated from enum livekit.proto.DtlsRole
 */
export var DtlsRole;
(function (DtlsRole) {
    /**
     * @generated from enum value: DTLS_CLIENT = 0;
     */
    DtlsRole[DtlsRole["DTLS_CLIENT"] = 0] = "DTLS_CLIENT";
    /**
     * @generated from enum value: DTLS_SERVER = 1;
     */
    DtlsRole[DtlsRole["DTLS_SERVER"] = 1] = "DTLS_SERVER";
    /**
     * @generated from enum value: DTLS_UNKNOWN = 2;
     */
    DtlsRole[DtlsRole["DTLS_UNKNOWN"] = 2] = "DTLS_UNKNOWN";
})(DtlsRole || (DtlsRole = {}));
// Retrieve enum metadata with: proto3.getEnumType(DtlsRole)
proto3.util.setEnumType(DtlsRole, "livekit.proto.DtlsRole", [
    { no: 0, name: "DTLS_CLIENT" },
    { no: 1, name: "DTLS_SERVER" },
    { no: 2, name: "DTLS_UNKNOWN" },
]);
/**
 * @generated from enum livekit.proto.IceCandidatePairState
 */
export var IceCandidatePairState;
(function (IceCandidatePairState) {
    /**
     * @generated from enum value: PAIR_FROZEN = 0;
     */
    IceCandidatePairState[IceCandidatePairState["PAIR_FROZEN"] = 0] = "PAIR_FROZEN";
    /**
     * @generated from enum value: PAIR_WAITING = 1;
     */
    IceCandidatePairState[IceCandidatePairState["PAIR_WAITING"] = 1] = "PAIR_WAITING";
    /**
     * @generated from enum value: PAIR_IN_PROGRESS = 2;
     */
    IceCandidatePairState[IceCandidatePairState["PAIR_IN_PROGRESS"] = 2] = "PAIR_IN_PROGRESS";
    /**
     * @generated from enum value: PAIR_FAILED = 3;
     */
    IceCandidatePairState[IceCandidatePairState["PAIR_FAILED"] = 3] = "PAIR_FAILED";
    /**
     * @generated from enum value: PAIR_SUCCEEDED = 4;
     */
    IceCandidatePairState[IceCandidatePairState["PAIR_SUCCEEDED"] = 4] = "PAIR_SUCCEEDED";
})(IceCandidatePairState || (IceCandidatePairState = {}));
// Retrieve enum metadata with: proto3.getEnumType(IceCandidatePairState)
proto3.util.setEnumType(IceCandidatePairState, "livekit.proto.IceCandidatePairState", [
    { no: 0, name: "PAIR_FROZEN" },
    { no: 1, name: "PAIR_WAITING" },
    { no: 2, name: "PAIR_IN_PROGRESS" },
    { no: 3, name: "PAIR_FAILED" },
    { no: 4, name: "PAIR_SUCCEEDED" },
]);
/**
 * @generated from enum livekit.proto.IceCandidateType
 */
export var IceCandidateType;
(function (IceCandidateType) {
    /**
     * @generated from enum value: HOST = 0;
     */
    IceCandidateType[IceCandidateType["HOST"] = 0] = "HOST";
    /**
     * @generated from enum value: SRFLX = 1;
     */
    IceCandidateType[IceCandidateType["SRFLX"] = 1] = "SRFLX";
    /**
     * @generated from enum value: PRFLX = 2;
     */
    IceCandidateType[IceCandidateType["PRFLX"] = 2] = "PRFLX";
    /**
     * @generated from enum value: RELAY = 3;
     */
    IceCandidateType[IceCandidateType["RELAY"] = 3] = "RELAY";
})(IceCandidateType || (IceCandidateType = {}));
// Retrieve enum metadata with: proto3.getEnumType(IceCandidateType)
proto3.util.setEnumType(IceCandidateType, "livekit.proto.IceCandidateType", [
    { no: 0, name: "HOST" },
    { no: 1, name: "SRFLX" },
    { no: 2, name: "PRFLX" },
    { no: 3, name: "RELAY" },
]);
/**
 * @generated from enum livekit.proto.IceServerTransportProtocol
 */
export var IceServerTransportProtocol;
(function (IceServerTransportProtocol) {
    /**
     * @generated from enum value: TRANSPORT_UDP = 0;
     */
    IceServerTransportProtocol[IceServerTransportProtocol["TRANSPORT_UDP"] = 0] = "TRANSPORT_UDP";
    /**
     * @generated from enum value: TRANSPORT_TCP = 1;
     */
    IceServerTransportProtocol[IceServerTransportProtocol["TRANSPORT_TCP"] = 1] = "TRANSPORT_TCP";
    /**
     * @generated from enum value: TRANSPORT_TLS = 2;
     */
    IceServerTransportProtocol[IceServerTransportProtocol["TRANSPORT_TLS"] = 2] = "TRANSPORT_TLS";
})(IceServerTransportProtocol || (IceServerTransportProtocol = {}));
// Retrieve enum metadata with: proto3.getEnumType(IceServerTransportProtocol)
proto3.util.setEnumType(IceServerTransportProtocol, "livekit.proto.IceServerTransportProtocol", [
    { no: 0, name: "TRANSPORT_UDP" },
    { no: 1, name: "TRANSPORT_TCP" },
    { no: 2, name: "TRANSPORT_TLS" },
]);
/**
 * @generated from enum livekit.proto.IceTcpCandidateType
 */
export var IceTcpCandidateType;
(function (IceTcpCandidateType) {
    /**
     * @generated from enum value: CANDIDATE_ACTIVE = 0;
     */
    IceTcpCandidateType[IceTcpCandidateType["CANDIDATE_ACTIVE"] = 0] = "CANDIDATE_ACTIVE";
    /**
     * @generated from enum value: CANDIDATE_PASSIVE = 1;
     */
    IceTcpCandidateType[IceTcpCandidateType["CANDIDATE_PASSIVE"] = 1] = "CANDIDATE_PASSIVE";
    /**
     * @generated from enum value: CANDIDATE_SO = 2;
     */
    IceTcpCandidateType[IceTcpCandidateType["CANDIDATE_SO"] = 2] = "CANDIDATE_SO";
})(IceTcpCandidateType || (IceTcpCandidateType = {}));
// Retrieve enum metadata with: proto3.getEnumType(IceTcpCandidateType)
proto3.util.setEnumType(IceTcpCandidateType, "livekit.proto.IceTcpCandidateType", [
    { no: 0, name: "CANDIDATE_ACTIVE" },
    { no: 1, name: "CANDIDATE_PASSIVE" },
    { no: 2, name: "CANDIDATE_SO" },
]);
/**
 * @generated from message livekit.proto.RtcStats
 */
export class RtcStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from oneof livekit.proto.RtcStats.stats
         */
        this.stats = { case: undefined };
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats, a, b);
    }
}
RtcStats.runtime = proto3;
RtcStats.typeName = "livekit.proto.RtcStats";
RtcStats.fields = proto3.util.newFieldList(() => [
    { no: 3, name: "codec", kind: "message", T: RtcStats_Codec, oneof: "stats" },
    { no: 4, name: "inbound_rtp", kind: "message", T: RtcStats_InboundRtp, oneof: "stats" },
    { no: 5, name: "outbound_rtp", kind: "message", T: RtcStats_OutboundRtp, oneof: "stats" },
    { no: 6, name: "remote_inbound_rtp", kind: "message", T: RtcStats_RemoteInboundRtp, oneof: "stats" },
    { no: 7, name: "remote_outbound_rtp", kind: "message", T: RtcStats_RemoteOutboundRtp, oneof: "stats" },
    { no: 8, name: "media_source", kind: "message", T: RtcStats_MediaSource, oneof: "stats" },
    { no: 9, name: "media_playout", kind: "message", T: RtcStats_MediaPlayout, oneof: "stats" },
    { no: 10, name: "peer_connection", kind: "message", T: RtcStats_PeerConnection, oneof: "stats" },
    { no: 11, name: "data_channel", kind: "message", T: RtcStats_DataChannel, oneof: "stats" },
    { no: 12, name: "transport", kind: "message", T: RtcStats_Transport, oneof: "stats" },
    { no: 13, name: "candidate_pair", kind: "message", T: RtcStats_CandidatePair, oneof: "stats" },
    { no: 14, name: "local_candidate", kind: "message", T: RtcStats_LocalCandidate, oneof: "stats" },
    { no: 15, name: "remote_candidate", kind: "message", T: RtcStats_RemoteCandidate, oneof: "stats" },
    { no: 16, name: "certificate", kind: "message", T: RtcStats_Certificate, oneof: "stats" },
    { no: 17, name: "track", kind: "message", T: RtcStats_Track, oneof: "stats" },
]);
/**
 * @generated from message livekit.proto.RtcStats.Codec
 */
export class RtcStats_Codec extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_Codec().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_Codec().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_Codec().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_Codec, a, b);
    }
}
RtcStats_Codec.runtime = proto3;
RtcStats_Codec.typeName = "livekit.proto.RtcStats.Codec";
RtcStats_Codec.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "codec", kind: "message", T: CodecStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.InboundRtp
 */
export class RtcStats_InboundRtp extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_InboundRtp().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_InboundRtp().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_InboundRtp().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_InboundRtp, a, b);
    }
}
RtcStats_InboundRtp.runtime = proto3;
RtcStats_InboundRtp.typeName = "livekit.proto.RtcStats.InboundRtp";
RtcStats_InboundRtp.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "stream", kind: "message", T: RtpStreamStats },
    { no: 3, name: "received", kind: "message", T: ReceivedRtpStreamStats },
    { no: 4, name: "inbound", kind: "message", T: InboundRtpStreamStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.OutboundRtp
 */
export class RtcStats_OutboundRtp extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_OutboundRtp().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_OutboundRtp().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_OutboundRtp().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_OutboundRtp, a, b);
    }
}
RtcStats_OutboundRtp.runtime = proto3;
RtcStats_OutboundRtp.typeName = "livekit.proto.RtcStats.OutboundRtp";
RtcStats_OutboundRtp.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "stream", kind: "message", T: RtpStreamStats },
    { no: 3, name: "sent", kind: "message", T: SentRtpStreamStats },
    { no: 4, name: "outbound", kind: "message", T: OutboundRtpStreamStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.RemoteInboundRtp
 */
export class RtcStats_RemoteInboundRtp extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_RemoteInboundRtp().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_RemoteInboundRtp().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_RemoteInboundRtp().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_RemoteInboundRtp, a, b);
    }
}
RtcStats_RemoteInboundRtp.runtime = proto3;
RtcStats_RemoteInboundRtp.typeName = "livekit.proto.RtcStats.RemoteInboundRtp";
RtcStats_RemoteInboundRtp.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "stream", kind: "message", T: RtpStreamStats },
    { no: 3, name: "received", kind: "message", T: ReceivedRtpStreamStats },
    { no: 4, name: "remote_inbound", kind: "message", T: RemoteInboundRtpStreamStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.RemoteOutboundRtp
 */
export class RtcStats_RemoteOutboundRtp extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_RemoteOutboundRtp().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_RemoteOutboundRtp().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_RemoteOutboundRtp().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_RemoteOutboundRtp, a, b);
    }
}
RtcStats_RemoteOutboundRtp.runtime = proto3;
RtcStats_RemoteOutboundRtp.typeName = "livekit.proto.RtcStats.RemoteOutboundRtp";
RtcStats_RemoteOutboundRtp.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "stream", kind: "message", T: RtpStreamStats },
    { no: 3, name: "sent", kind: "message", T: SentRtpStreamStats },
    { no: 4, name: "remote_outbound", kind: "message", T: RemoteOutboundRtpStreamStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.MediaSource
 */
export class RtcStats_MediaSource extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_MediaSource().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_MediaSource().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_MediaSource().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_MediaSource, a, b);
    }
}
RtcStats_MediaSource.runtime = proto3;
RtcStats_MediaSource.typeName = "livekit.proto.RtcStats.MediaSource";
RtcStats_MediaSource.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "source", kind: "message", T: MediaSourceStats },
    { no: 3, name: "audio", kind: "message", T: AudioSourceStats },
    { no: 4, name: "video", kind: "message", T: VideoSourceStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.MediaPlayout
 */
export class RtcStats_MediaPlayout extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_MediaPlayout().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_MediaPlayout().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_MediaPlayout().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_MediaPlayout, a, b);
    }
}
RtcStats_MediaPlayout.runtime = proto3;
RtcStats_MediaPlayout.typeName = "livekit.proto.RtcStats.MediaPlayout";
RtcStats_MediaPlayout.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "audio_playout", kind: "message", T: AudioPlayoutStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.PeerConnection
 */
export class RtcStats_PeerConnection extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_PeerConnection().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_PeerConnection().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_PeerConnection().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_PeerConnection, a, b);
    }
}
RtcStats_PeerConnection.runtime = proto3;
RtcStats_PeerConnection.typeName = "livekit.proto.RtcStats.PeerConnection";
RtcStats_PeerConnection.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "pc", kind: "message", T: PeerConnectionStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.DataChannel
 */
export class RtcStats_DataChannel extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_DataChannel().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_DataChannel().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_DataChannel().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_DataChannel, a, b);
    }
}
RtcStats_DataChannel.runtime = proto3;
RtcStats_DataChannel.typeName = "livekit.proto.RtcStats.DataChannel";
RtcStats_DataChannel.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "dc", kind: "message", T: DataChannelStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.Transport
 */
export class RtcStats_Transport extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_Transport().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_Transport().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_Transport().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_Transport, a, b);
    }
}
RtcStats_Transport.runtime = proto3;
RtcStats_Transport.typeName = "livekit.proto.RtcStats.Transport";
RtcStats_Transport.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "transport", kind: "message", T: TransportStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.CandidatePair
 */
export class RtcStats_CandidatePair extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_CandidatePair().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_CandidatePair().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_CandidatePair().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_CandidatePair, a, b);
    }
}
RtcStats_CandidatePair.runtime = proto3;
RtcStats_CandidatePair.typeName = "livekit.proto.RtcStats.CandidatePair";
RtcStats_CandidatePair.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "candidate_pair", kind: "message", T: CandidatePairStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.LocalCandidate
 */
export class RtcStats_LocalCandidate extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_LocalCandidate().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_LocalCandidate().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_LocalCandidate().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_LocalCandidate, a, b);
    }
}
RtcStats_LocalCandidate.runtime = proto3;
RtcStats_LocalCandidate.typeName = "livekit.proto.RtcStats.LocalCandidate";
RtcStats_LocalCandidate.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "candidate", kind: "message", T: IceCandidateStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.RemoteCandidate
 */
export class RtcStats_RemoteCandidate extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_RemoteCandidate().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_RemoteCandidate().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_RemoteCandidate().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_RemoteCandidate, a, b);
    }
}
RtcStats_RemoteCandidate.runtime = proto3;
RtcStats_RemoteCandidate.typeName = "livekit.proto.RtcStats.RemoteCandidate";
RtcStats_RemoteCandidate.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "candidate", kind: "message", T: IceCandidateStats },
]);
/**
 * @generated from message livekit.proto.RtcStats.Certificate
 */
export class RtcStats_Certificate extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_Certificate().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_Certificate().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_Certificate().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_Certificate, a, b);
    }
}
RtcStats_Certificate.runtime = proto3;
RtcStats_Certificate.typeName = "livekit.proto.RtcStats.Certificate";
RtcStats_Certificate.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "rtc", kind: "message", T: RtcStatsData },
    { no: 2, name: "certificate", kind: "message", T: CertificateStats },
]);
/**
 * Deprecated
 *
 * @generated from message livekit.proto.RtcStats.Track
 */
export class RtcStats_Track extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStats_Track().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStats_Track().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStats_Track().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStats_Track, a, b);
    }
}
RtcStats_Track.runtime = proto3;
RtcStats_Track.typeName = "livekit.proto.RtcStats.Track";
RtcStats_Track.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message livekit.proto.RtcStatsData
 */
export class RtcStatsData extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string id = 1;
         */
        this.id = "";
        /**
         * @generated from field: int64 timestamp = 2;
         */
        this.timestamp = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtcStatsData().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtcStatsData().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtcStatsData().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtcStatsData, a, b);
    }
}
RtcStatsData.runtime = proto3;
RtcStatsData.typeName = "livekit.proto.RtcStatsData";
RtcStatsData.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
/**
 * @generated from message livekit.proto.CodecStats
 */
export class CodecStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint32 payload_type = 1;
         */
        this.payloadType = 0;
        /**
         * @generated from field: string transport_id = 2;
         */
        this.transportId = "";
        /**
         * @generated from field: string mime_type = 3;
         */
        this.mimeType = "";
        /**
         * @generated from field: uint32 clock_rate = 4;
         */
        this.clockRate = 0;
        /**
         * @generated from field: uint32 channels = 5;
         */
        this.channels = 0;
        /**
         * @generated from field: string sdp_fmtp_line = 6;
         */
        this.sdpFmtpLine = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CodecStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CodecStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CodecStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CodecStats, a, b);
    }
}
CodecStats.runtime = proto3;
CodecStats.typeName = "livekit.proto.CodecStats";
CodecStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "payload_type", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "transport_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "mime_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "clock_rate", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "channels", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "sdp_fmtp_line", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message livekit.proto.RtpStreamStats
 */
export class RtpStreamStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint32 ssrc = 1;
         */
        this.ssrc = 0;
        /**
         * @generated from field: string kind = 2;
         */
        this.kind = "";
        /**
         * @generated from field: string transport_id = 3;
         */
        this.transportId = "";
        /**
         * @generated from field: string codec_id = 4;
         */
        this.codecId = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RtpStreamStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RtpStreamStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RtpStreamStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RtpStreamStats, a, b);
    }
}
RtpStreamStats.runtime = proto3;
RtpStreamStats.typeName = "livekit.proto.RtpStreamStats";
RtpStreamStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "ssrc", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "kind", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "transport_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "codec_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message livekit.proto.ReceivedRtpStreamStats
 */
export class ReceivedRtpStreamStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 packets_received = 1;
         */
        this.packetsReceived = protoInt64.zero;
        /**
         * @generated from field: int64 packets_lost = 2;
         */
        this.packetsLost = protoInt64.zero;
        /**
         * @generated from field: double jitter = 3;
         */
        this.jitter = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ReceivedRtpStreamStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ReceivedRtpStreamStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ReceivedRtpStreamStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ReceivedRtpStreamStats, a, b);
    }
}
ReceivedRtpStreamStats.runtime = proto3;
ReceivedRtpStreamStats.typeName = "livekit.proto.ReceivedRtpStreamStats";
ReceivedRtpStreamStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "packets_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "packets_lost", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "jitter", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
]);
/**
 * @generated from message livekit.proto.InboundRtpStreamStats
 */
export class InboundRtpStreamStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string track_identifier = 1;
         */
        this.trackIdentifier = "";
        /**
         * @generated from field: string mid = 2;
         */
        this.mid = "";
        /**
         * @generated from field: string remote_id = 3;
         */
        this.remoteId = "";
        /**
         * @generated from field: uint32 frames_decoded = 4;
         */
        this.framesDecoded = 0;
        /**
         * @generated from field: uint32 key_frames_decoded = 5;
         */
        this.keyFramesDecoded = 0;
        /**
         * @generated from field: uint32 frames_rendered = 6;
         */
        this.framesRendered = 0;
        /**
         * @generated from field: uint32 frames_dropped = 7;
         */
        this.framesDropped = 0;
        /**
         * @generated from field: uint32 frame_width = 8;
         */
        this.frameWidth = 0;
        /**
         * @generated from field: uint32 frame_height = 9;
         */
        this.frameHeight = 0;
        /**
         * @generated from field: double frames_per_second = 10;
         */
        this.framesPerSecond = 0;
        /**
         * @generated from field: uint64 qp_sum = 11;
         */
        this.qpSum = protoInt64.zero;
        /**
         * @generated from field: double total_decode_time = 12;
         */
        this.totalDecodeTime = 0;
        /**
         * @generated from field: double total_inter_frame_delay = 13;
         */
        this.totalInterFrameDelay = 0;
        /**
         * @generated from field: double total_squared_inter_frame_delay = 14;
         */
        this.totalSquaredInterFrameDelay = 0;
        /**
         * @generated from field: uint32 pause_count = 15;
         */
        this.pauseCount = 0;
        /**
         * @generated from field: double total_pause_duration = 16;
         */
        this.totalPauseDuration = 0;
        /**
         * @generated from field: uint32 freeze_count = 17;
         */
        this.freezeCount = 0;
        /**
         * @generated from field: double total_freeze_duration = 18;
         */
        this.totalFreezeDuration = 0;
        /**
         * @generated from field: double last_packet_received_timestamp = 19;
         */
        this.lastPacketReceivedTimestamp = 0;
        /**
         * @generated from field: uint64 header_bytes_received = 20;
         */
        this.headerBytesReceived = protoInt64.zero;
        /**
         * @generated from field: uint64 packets_discarded = 21;
         */
        this.packetsDiscarded = protoInt64.zero;
        /**
         * @generated from field: uint64 fec_bytes_received = 22;
         */
        this.fecBytesReceived = protoInt64.zero;
        /**
         * @generated from field: uint64 fec_packets_received = 23;
         */
        this.fecPacketsReceived = protoInt64.zero;
        /**
         * @generated from field: uint64 fec_packets_discarded = 24;
         */
        this.fecPacketsDiscarded = protoInt64.zero;
        /**
         * @generated from field: uint64 bytes_received = 25;
         */
        this.bytesReceived = protoInt64.zero;
        /**
         * @generated from field: uint32 nack_count = 26;
         */
        this.nackCount = 0;
        /**
         * @generated from field: uint32 fir_count = 27;
         */
        this.firCount = 0;
        /**
         * @generated from field: uint32 pli_count = 28;
         */
        this.pliCount = 0;
        /**
         * @generated from field: double total_processing_delay = 29;
         */
        this.totalProcessingDelay = 0;
        /**
         * @generated from field: double estimated_playout_timestamp = 30;
         */
        this.estimatedPlayoutTimestamp = 0;
        /**
         * @generated from field: double jitter_buffer_delay = 31;
         */
        this.jitterBufferDelay = 0;
        /**
         * @generated from field: double jitter_buffer_target_delay = 32;
         */
        this.jitterBufferTargetDelay = 0;
        /**
         * @generated from field: uint64 jitter_buffer_emitted_count = 33;
         */
        this.jitterBufferEmittedCount = protoInt64.zero;
        /**
         * @generated from field: double jitter_buffer_minimum_delay = 34;
         */
        this.jitterBufferMinimumDelay = 0;
        /**
         * @generated from field: uint64 total_samples_received = 35;
         */
        this.totalSamplesReceived = protoInt64.zero;
        /**
         * @generated from field: uint64 concealed_samples = 36;
         */
        this.concealedSamples = protoInt64.zero;
        /**
         * @generated from field: uint64 silent_concealed_samples = 37;
         */
        this.silentConcealedSamples = protoInt64.zero;
        /**
         * @generated from field: uint64 concealment_events = 38;
         */
        this.concealmentEvents = protoInt64.zero;
        /**
         * @generated from field: uint64 inserted_samples_for_deceleration = 39;
         */
        this.insertedSamplesForDeceleration = protoInt64.zero;
        /**
         * @generated from field: uint64 removed_samples_for_acceleration = 40;
         */
        this.removedSamplesForAcceleration = protoInt64.zero;
        /**
         * @generated from field: double audio_level = 41;
         */
        this.audioLevel = 0;
        /**
         * @generated from field: double total_audio_energy = 42;
         */
        this.totalAudioEnergy = 0;
        /**
         * @generated from field: double total_samples_duration = 43;
         */
        this.totalSamplesDuration = 0;
        /**
         * @generated from field: uint64 frames_received = 44;
         */
        this.framesReceived = protoInt64.zero;
        /**
         * @generated from field: string decoder_implementation = 45;
         */
        this.decoderImplementation = "";
        /**
         * @generated from field: string playout_id = 46;
         */
        this.playoutId = "";
        /**
         * @generated from field: bool power_efficient_decoder = 47;
         */
        this.powerEfficientDecoder = false;
        /**
         * @generated from field: uint64 frames_assembled_from_multiple_packets = 48;
         */
        this.framesAssembledFromMultiplePackets = protoInt64.zero;
        /**
         * @generated from field: double total_assembly_time = 49;
         */
        this.totalAssemblyTime = 0;
        /**
         * @generated from field: uint64 retransmitted_packets_received = 50;
         */
        this.retransmittedPacketsReceived = protoInt64.zero;
        /**
         * @generated from field: uint64 retransmitted_bytes_received = 51;
         */
        this.retransmittedBytesReceived = protoInt64.zero;
        /**
         * @generated from field: uint32 rtx_ssrc = 52;
         */
        this.rtxSsrc = 0;
        /**
         * @generated from field: uint32 fec_ssrc = 53;
         */
        this.fecSsrc = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new InboundRtpStreamStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InboundRtpStreamStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InboundRtpStreamStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(InboundRtpStreamStats, a, b);
    }
}
InboundRtpStreamStats.runtime = proto3;
InboundRtpStreamStats.typeName = "livekit.proto.InboundRtpStreamStats";
InboundRtpStreamStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "track_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "mid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "remote_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "frames_decoded", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "key_frames_decoded", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "frames_rendered", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "frames_dropped", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "frame_width", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 9, name: "frame_height", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 10, name: "frames_per_second", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 11, name: "qp_sum", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "total_decode_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 13, name: "total_inter_frame_delay", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 14, name: "total_squared_inter_frame_delay", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 15, name: "pause_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 16, name: "total_pause_duration", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 17, name: "freeze_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 18, name: "total_freeze_duration", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 19, name: "last_packet_received_timestamp", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 20, name: "header_bytes_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "packets_discarded", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "fec_bytes_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "fec_packets_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "fec_packets_discarded", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "bytes_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "nack_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 27, name: "fir_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 28, name: "pli_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 29, name: "total_processing_delay", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 30, name: "estimated_playout_timestamp", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 31, name: "jitter_buffer_delay", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 32, name: "jitter_buffer_target_delay", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 33, name: "jitter_buffer_emitted_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 34, name: "jitter_buffer_minimum_delay", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 35, name: "total_samples_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 36, name: "concealed_samples", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 37, name: "silent_concealed_samples", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 38, name: "concealment_events", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "inserted_samples_for_deceleration", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "removed_samples_for_acceleration", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "audio_level", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 42, name: "total_audio_energy", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 43, name: "total_samples_duration", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 44, name: "frames_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 45, name: "decoder_implementation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 46, name: "playout_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 47, name: "power_efficient_decoder", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 48, name: "frames_assembled_from_multiple_packets", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 49, name: "total_assembly_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 50, name: "retransmitted_packets_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "retransmitted_bytes_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "rtx_ssrc", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 53, name: "fec_ssrc", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
]);
/**
 * @generated from message livekit.proto.SentRtpStreamStats
 */
export class SentRtpStreamStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 packets_sent = 1;
         */
        this.packetsSent = protoInt64.zero;
        /**
         * @generated from field: uint64 bytes_sent = 2;
         */
        this.bytesSent = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SentRtpStreamStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SentRtpStreamStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SentRtpStreamStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SentRtpStreamStats, a, b);
    }
}
SentRtpStreamStats.runtime = proto3;
SentRtpStreamStats.typeName = "livekit.proto.SentRtpStreamStats";
SentRtpStreamStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "packets_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "bytes_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.OutboundRtpStreamStats
 */
export class OutboundRtpStreamStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string mid = 1;
         */
        this.mid = "";
        /**
         * @generated from field: string media_source_id = 2;
         */
        this.mediaSourceId = "";
        /**
         * @generated from field: string remote_id = 3;
         */
        this.remoteId = "";
        /**
         * @generated from field: string rid = 4;
         */
        this.rid = "";
        /**
         * @generated from field: uint64 header_bytes_sent = 5;
         */
        this.headerBytesSent = protoInt64.zero;
        /**
         * @generated from field: uint64 retransmitted_packets_sent = 6;
         */
        this.retransmittedPacketsSent = protoInt64.zero;
        /**
         * @generated from field: uint64 retransmitted_bytes_sent = 7;
         */
        this.retransmittedBytesSent = protoInt64.zero;
        /**
         * @generated from field: uint32 rtx_ssrc = 8;
         */
        this.rtxSsrc = 0;
        /**
         * @generated from field: double target_bitrate = 9;
         */
        this.targetBitrate = 0;
        /**
         * @generated from field: uint64 total_encoded_bytes_target = 10;
         */
        this.totalEncodedBytesTarget = protoInt64.zero;
        /**
         * @generated from field: uint32 frame_width = 11;
         */
        this.frameWidth = 0;
        /**
         * @generated from field: uint32 frame_height = 12;
         */
        this.frameHeight = 0;
        /**
         * @generated from field: double frames_per_second = 13;
         */
        this.framesPerSecond = 0;
        /**
         * @generated from field: uint32 frames_sent = 14;
         */
        this.framesSent = 0;
        /**
         * @generated from field: uint32 huge_frames_sent = 15;
         */
        this.hugeFramesSent = 0;
        /**
         * @generated from field: uint32 frames_encoded = 16;
         */
        this.framesEncoded = 0;
        /**
         * @generated from field: uint32 key_frames_encoded = 17;
         */
        this.keyFramesEncoded = 0;
        /**
         * @generated from field: uint64 qp_sum = 18;
         */
        this.qpSum = protoInt64.zero;
        /**
         * @generated from field: double total_encode_time = 19;
         */
        this.totalEncodeTime = 0;
        /**
         * @generated from field: double total_packet_send_delay = 20;
         */
        this.totalPacketSendDelay = 0;
        /**
         * @generated from field: livekit.proto.QualityLimitationReason quality_limitation_reason = 21;
         */
        this.qualityLimitationReason = QualityLimitationReason.LIMITATION_NONE;
        /**
         * @generated from field: map<string, double> quality_limitation_durations = 22;
         */
        this.qualityLimitationDurations = {};
        /**
         * @generated from field: uint32 quality_limitation_resolution_changes = 23;
         */
        this.qualityLimitationResolutionChanges = 0;
        /**
         * @generated from field: uint32 nack_count = 24;
         */
        this.nackCount = 0;
        /**
         * @generated from field: uint32 fir_count = 25;
         */
        this.firCount = 0;
        /**
         * @generated from field: uint32 pli_count = 26;
         */
        this.pliCount = 0;
        /**
         * @generated from field: string encoder_implementation = 27;
         */
        this.encoderImplementation = "";
        /**
         * @generated from field: bool power_efficient_encoder = 28;
         */
        this.powerEfficientEncoder = false;
        /**
         * @generated from field: bool active = 29;
         */
        this.active = false;
        /**
         * @generated from field: string scalibility_mode = 30;
         */
        this.scalibilityMode = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new OutboundRtpStreamStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OutboundRtpStreamStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OutboundRtpStreamStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(OutboundRtpStreamStats, a, b);
    }
}
OutboundRtpStreamStats.runtime = proto3;
OutboundRtpStreamStats.typeName = "livekit.proto.OutboundRtpStreamStats";
OutboundRtpStreamStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "mid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "media_source_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "remote_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "rid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "header_bytes_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "retransmitted_packets_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "retransmitted_bytes_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "rtx_ssrc", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 9, name: "target_bitrate", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 10, name: "total_encoded_bytes_target", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "frame_width", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "frame_height", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "frames_per_second", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 14, name: "frames_sent", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 15, name: "huge_frames_sent", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 16, name: "frames_encoded", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 17, name: "key_frames_encoded", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 18, name: "qp_sum", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "total_encode_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 20, name: "total_packet_send_delay", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 21, name: "quality_limitation_reason", kind: "enum", T: proto3.getEnumType(QualityLimitationReason) },
    { no: 22, name: "quality_limitation_durations", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "scalar", T: 1 /* ScalarType.DOUBLE */ } },
    { no: 23, name: "quality_limitation_resolution_changes", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 24, name: "nack_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 25, name: "fir_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 26, name: "pli_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 27, name: "encoder_implementation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 28, name: "power_efficient_encoder", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 29, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 30, name: "scalibility_mode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message livekit.proto.RemoteInboundRtpStreamStats
 */
export class RemoteInboundRtpStreamStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string local_id = 1;
         */
        this.localId = "";
        /**
         * @generated from field: double round_trip_time = 2;
         */
        this.roundTripTime = 0;
        /**
         * @generated from field: double total_round_trip_time = 3;
         */
        this.totalRoundTripTime = 0;
        /**
         * @generated from field: double fraction_lost = 4;
         */
        this.fractionLost = 0;
        /**
         * @generated from field: uint64 round_trip_time_measurements = 5;
         */
        this.roundTripTimeMeasurements = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RemoteInboundRtpStreamStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RemoteInboundRtpStreamStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RemoteInboundRtpStreamStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RemoteInboundRtpStreamStats, a, b);
    }
}
RemoteInboundRtpStreamStats.runtime = proto3;
RemoteInboundRtpStreamStats.typeName = "livekit.proto.RemoteInboundRtpStreamStats";
RemoteInboundRtpStreamStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "local_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "round_trip_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "total_round_trip_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "fraction_lost", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "round_trip_time_measurements", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.RemoteOutboundRtpStreamStats
 */
export class RemoteOutboundRtpStreamStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string local_id = 1;
         */
        this.localId = "";
        /**
         * @generated from field: double remote_timestamp = 2;
         */
        this.remoteTimestamp = 0;
        /**
         * @generated from field: uint64 reports_sent = 3;
         */
        this.reportsSent = protoInt64.zero;
        /**
         * @generated from field: double round_trip_time = 4;
         */
        this.roundTripTime = 0;
        /**
         * @generated from field: double total_round_trip_time = 5;
         */
        this.totalRoundTripTime = 0;
        /**
         * @generated from field: uint64 round_trip_time_measurements = 6;
         */
        this.roundTripTimeMeasurements = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RemoteOutboundRtpStreamStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RemoteOutboundRtpStreamStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RemoteOutboundRtpStreamStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(RemoteOutboundRtpStreamStats, a, b);
    }
}
RemoteOutboundRtpStreamStats.runtime = proto3;
RemoteOutboundRtpStreamStats.typeName = "livekit.proto.RemoteOutboundRtpStreamStats";
RemoteOutboundRtpStreamStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "local_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "remote_timestamp", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "reports_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "round_trip_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "total_round_trip_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 6, name: "round_trip_time_measurements", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.MediaSourceStats
 */
export class MediaSourceStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string track_identifier = 1;
         */
        this.trackIdentifier = "";
        /**
         * @generated from field: string kind = 2;
         */
        this.kind = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MediaSourceStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MediaSourceStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MediaSourceStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MediaSourceStats, a, b);
    }
}
MediaSourceStats.runtime = proto3;
MediaSourceStats.typeName = "livekit.proto.MediaSourceStats";
MediaSourceStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "track_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "kind", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message livekit.proto.AudioSourceStats
 */
export class AudioSourceStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: double audio_level = 1;
         */
        this.audioLevel = 0;
        /**
         * @generated from field: double total_audio_energy = 2;
         */
        this.totalAudioEnergy = 0;
        /**
         * @generated from field: double total_samples_duration = 3;
         */
        this.totalSamplesDuration = 0;
        /**
         * @generated from field: double echo_return_loss = 4;
         */
        this.echoReturnLoss = 0;
        /**
         * @generated from field: double echo_return_loss_enhancement = 5;
         */
        this.echoReturnLossEnhancement = 0;
        /**
         * @generated from field: double dropped_samples_duration = 6;
         */
        this.droppedSamplesDuration = 0;
        /**
         * @generated from field: uint32 dropped_samples_events = 7;
         */
        this.droppedSamplesEvents = 0;
        /**
         * @generated from field: double total_capture_delay = 8;
         */
        this.totalCaptureDelay = 0;
        /**
         * @generated from field: uint64 total_samples_captured = 9;
         */
        this.totalSamplesCaptured = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AudioSourceStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AudioSourceStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AudioSourceStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AudioSourceStats, a, b);
    }
}
AudioSourceStats.runtime = proto3;
AudioSourceStats.typeName = "livekit.proto.AudioSourceStats";
AudioSourceStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "audio_level", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "total_audio_energy", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "total_samples_duration", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "echo_return_loss", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "echo_return_loss_enhancement", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 6, name: "dropped_samples_duration", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 7, name: "dropped_samples_events", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "total_capture_delay", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 9, name: "total_samples_captured", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.VideoSourceStats
 */
export class VideoSourceStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint32 width = 1;
         */
        this.width = 0;
        /**
         * @generated from field: uint32 height = 2;
         */
        this.height = 0;
        /**
         * @generated from field: uint32 frames = 3;
         */
        this.frames = 0;
        /**
         * @generated from field: double frames_per_second = 4;
         */
        this.framesPerSecond = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new VideoSourceStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new VideoSourceStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new VideoSourceStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(VideoSourceStats, a, b);
    }
}
VideoSourceStats.runtime = proto3;
VideoSourceStats.typeName = "livekit.proto.VideoSourceStats";
VideoSourceStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "width", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "height", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "frames", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "frames_per_second", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
]);
/**
 * @generated from message livekit.proto.AudioPlayoutStats
 */
export class AudioPlayoutStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string kind = 1;
         */
        this.kind = "";
        /**
         * @generated from field: double synthesized_samples_duration = 2;
         */
        this.synthesizedSamplesDuration = 0;
        /**
         * @generated from field: uint32 synthesized_samples_events = 3;
         */
        this.synthesizedSamplesEvents = 0;
        /**
         * @generated from field: double total_samples_duration = 4;
         */
        this.totalSamplesDuration = 0;
        /**
         * @generated from field: double total_playout_delay = 5;
         */
        this.totalPlayoutDelay = 0;
        /**
         * @generated from field: uint64 total_samples_count = 6;
         */
        this.totalSamplesCount = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AudioPlayoutStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AudioPlayoutStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AudioPlayoutStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AudioPlayoutStats, a, b);
    }
}
AudioPlayoutStats.runtime = proto3;
AudioPlayoutStats.typeName = "livekit.proto.AudioPlayoutStats";
AudioPlayoutStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "kind", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "synthesized_samples_duration", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "synthesized_samples_events", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "total_samples_duration", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "total_playout_delay", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 6, name: "total_samples_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.PeerConnectionStats
 */
export class PeerConnectionStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint32 data_channels_opened = 1;
         */
        this.dataChannelsOpened = 0;
        /**
         * @generated from field: uint32 data_channels_closed = 2;
         */
        this.dataChannelsClosed = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PeerConnectionStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PeerConnectionStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PeerConnectionStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PeerConnectionStats, a, b);
    }
}
PeerConnectionStats.runtime = proto3;
PeerConnectionStats.typeName = "livekit.proto.PeerConnectionStats";
PeerConnectionStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "data_channels_opened", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "data_channels_closed", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
]);
/**
 * @generated from message livekit.proto.DataChannelStats
 */
export class DataChannelStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string label = 1;
         */
        this.label = "";
        /**
         * @generated from field: string protocol = 2;
         */
        this.protocol = "";
        /**
         * @generated from field: int32 data_channel_identifier = 3;
         */
        this.dataChannelIdentifier = 0;
        /**
         * @generated from field: uint32 messages_sent = 5;
         */
        this.messagesSent = 0;
        /**
         * @generated from field: uint64 bytes_sent = 6;
         */
        this.bytesSent = protoInt64.zero;
        /**
         * @generated from field: uint32 messages_received = 7;
         */
        this.messagesReceived = 0;
        /**
         * @generated from field: uint64 bytes_received = 8;
         */
        this.bytesReceived = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DataChannelStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DataChannelStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DataChannelStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DataChannelStats, a, b);
    }
}
DataChannelStats.runtime = proto3;
DataChannelStats.typeName = "livekit.proto.DataChannelStats";
DataChannelStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "protocol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "data_channel_identifier", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "state", kind: "enum", T: proto3.getEnumType(DataChannelState), opt: true },
    { no: 5, name: "messages_sent", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "bytes_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "messages_received", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "bytes_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.TransportStats
 */
export class TransportStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 packets_sent = 1;
         */
        this.packetsSent = protoInt64.zero;
        /**
         * @generated from field: uint64 packets_received = 2;
         */
        this.packetsReceived = protoInt64.zero;
        /**
         * @generated from field: uint64 bytes_sent = 3;
         */
        this.bytesSent = protoInt64.zero;
        /**
         * @generated from field: uint64 bytes_received = 4;
         */
        this.bytesReceived = protoInt64.zero;
        /**
         * @generated from field: livekit.proto.IceRole ice_role = 5;
         */
        this.iceRole = IceRole.ICE_UNKNOWN;
        /**
         * @generated from field: string ice_local_username_fragment = 6;
         */
        this.iceLocalUsernameFragment = "";
        /**
         * @generated from field: string selected_candidate_pair_id = 9;
         */
        this.selectedCandidatePairId = "";
        /**
         * @generated from field: string local_certificate_id = 10;
         */
        this.localCertificateId = "";
        /**
         * @generated from field: string remote_certificate_id = 11;
         */
        this.remoteCertificateId = "";
        /**
         * @generated from field: string tls_version = 12;
         */
        this.tlsVersion = "";
        /**
         * @generated from field: string dtls_cipher = 13;
         */
        this.dtlsCipher = "";
        /**
         * @generated from field: livekit.proto.DtlsRole dtls_role = 14;
         */
        this.dtlsRole = DtlsRole.DTLS_CLIENT;
        /**
         * @generated from field: string srtp_cipher = 15;
         */
        this.srtpCipher = "";
        /**
         * @generated from field: uint32 selected_candidate_pair_changes = 16;
         */
        this.selectedCandidatePairChanges = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TransportStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TransportStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TransportStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(TransportStats, a, b);
    }
}
TransportStats.runtime = proto3;
TransportStats.typeName = "livekit.proto.TransportStats";
TransportStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "packets_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "packets_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "bytes_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "bytes_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "ice_role", kind: "enum", T: proto3.getEnumType(IceRole) },
    { no: 6, name: "ice_local_username_fragment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "dtls_state", kind: "enum", T: proto3.getEnumType(DtlsTransportState), opt: true },
    { no: 8, name: "ice_state", kind: "enum", T: proto3.getEnumType(IceTransportState), opt: true },
    { no: 9, name: "selected_candidate_pair_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "local_certificate_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "remote_certificate_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "tls_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "dtls_cipher", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "dtls_role", kind: "enum", T: proto3.getEnumType(DtlsRole) },
    { no: 15, name: "srtp_cipher", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "selected_candidate_pair_changes", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
]);
/**
 * @generated from message livekit.proto.CandidatePairStats
 */
export class CandidatePairStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string transport_id = 1;
         */
        this.transportId = "";
        /**
         * @generated from field: string local_candidate_id = 2;
         */
        this.localCandidateId = "";
        /**
         * @generated from field: string remote_candidate_id = 3;
         */
        this.remoteCandidateId = "";
        /**
         * @generated from field: bool nominated = 5;
         */
        this.nominated = false;
        /**
         * @generated from field: uint64 packets_sent = 6;
         */
        this.packetsSent = protoInt64.zero;
        /**
         * @generated from field: uint64 packets_received = 7;
         */
        this.packetsReceived = protoInt64.zero;
        /**
         * @generated from field: uint64 bytes_sent = 8;
         */
        this.bytesSent = protoInt64.zero;
        /**
         * @generated from field: uint64 bytes_received = 9;
         */
        this.bytesReceived = protoInt64.zero;
        /**
         * @generated from field: double last_packet_sent_timestamp = 10;
         */
        this.lastPacketSentTimestamp = 0;
        /**
         * @generated from field: double last_packet_received_timestamp = 11;
         */
        this.lastPacketReceivedTimestamp = 0;
        /**
         * @generated from field: double total_round_trip_time = 12;
         */
        this.totalRoundTripTime = 0;
        /**
         * @generated from field: double current_round_trip_time = 13;
         */
        this.currentRoundTripTime = 0;
        /**
         * @generated from field: double available_outgoing_bitrate = 14;
         */
        this.availableOutgoingBitrate = 0;
        /**
         * @generated from field: double available_incoming_bitrate = 15;
         */
        this.availableIncomingBitrate = 0;
        /**
         * @generated from field: uint64 requests_received = 16;
         */
        this.requestsReceived = protoInt64.zero;
        /**
         * @generated from field: uint64 requests_sent = 17;
         */
        this.requestsSent = protoInt64.zero;
        /**
         * @generated from field: uint64 responses_received = 18;
         */
        this.responsesReceived = protoInt64.zero;
        /**
         * @generated from field: uint64 responses_sent = 19;
         */
        this.responsesSent = protoInt64.zero;
        /**
         * @generated from field: uint64 consent_requests_sent = 20;
         */
        this.consentRequestsSent = protoInt64.zero;
        /**
         * @generated from field: uint32 packets_discarded_on_send = 21;
         */
        this.packetsDiscardedOnSend = 0;
        /**
         * @generated from field: uint64 bytes_discarded_on_send = 22;
         */
        this.bytesDiscardedOnSend = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CandidatePairStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CandidatePairStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CandidatePairStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CandidatePairStats, a, b);
    }
}
CandidatePairStats.runtime = proto3;
CandidatePairStats.typeName = "livekit.proto.CandidatePairStats";
CandidatePairStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "transport_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "local_candidate_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "remote_candidate_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "state", kind: "enum", T: proto3.getEnumType(IceCandidatePairState), opt: true },
    { no: 5, name: "nominated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "packets_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "packets_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "bytes_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "bytes_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "last_packet_sent_timestamp", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 11, name: "last_packet_received_timestamp", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 12, name: "total_round_trip_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 13, name: "current_round_trip_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 14, name: "available_outgoing_bitrate", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 15, name: "available_incoming_bitrate", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 16, name: "requests_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "requests_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "responses_received", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "responses_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "consent_requests_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "packets_discarded_on_send", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 22, name: "bytes_discarded_on_send", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message livekit.proto.IceCandidateStats
 */
export class IceCandidateStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string transport_id = 1;
         */
        this.transportId = "";
        /**
         * @generated from field: string address = 2;
         */
        this.address = "";
        /**
         * @generated from field: int32 port = 3;
         */
        this.port = 0;
        /**
         * @generated from field: string protocol = 4;
         */
        this.protocol = "";
        /**
         * @generated from field: int32 priority = 6;
         */
        this.priority = 0;
        /**
         * @generated from field: string url = 7;
         */
        this.url = "";
        /**
         * @generated from field: string foundation = 9;
         */
        this.foundation = "";
        /**
         * @generated from field: string related_address = 10;
         */
        this.relatedAddress = "";
        /**
         * @generated from field: int32 related_port = 11;
         */
        this.relatedPort = 0;
        /**
         * @generated from field: string username_fragment = 12;
         */
        this.usernameFragment = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new IceCandidateStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new IceCandidateStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new IceCandidateStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(IceCandidateStats, a, b);
    }
}
IceCandidateStats.runtime = proto3;
IceCandidateStats.typeName = "livekit.proto.IceCandidateStats";
IceCandidateStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "transport_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "port", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "protocol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "candidate_type", kind: "enum", T: proto3.getEnumType(IceCandidateType), opt: true },
    { no: 6, name: "priority", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "relay_protocol", kind: "enum", T: proto3.getEnumType(IceServerTransportProtocol), opt: true },
    { no: 9, name: "foundation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "related_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "related_port", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "username_fragment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "tcp_type", kind: "enum", T: proto3.getEnumType(IceTcpCandidateType), opt: true },
]);
/**
 * @generated from message livekit.proto.CertificateStats
 */
export class CertificateStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string fingerprint = 1;
         */
        this.fingerprint = "";
        /**
         * @generated from field: string fingerprint_algorithm = 2;
         */
        this.fingerprintAlgorithm = "";
        /**
         * @generated from field: string base64_certificate = 3;
         */
        this.base64Certificate = "";
        /**
         * @generated from field: string issuer_certificate_id = 4;
         */
        this.issuerCertificateId = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CertificateStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CertificateStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CertificateStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CertificateStats, a, b);
    }
}
CertificateStats.runtime = proto3;
CertificateStats.typeName = "livekit.proto.CertificateStats";
CertificateStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "fingerprint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "fingerprint_algorithm", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "base64_certificate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "issuer_certificate_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
//# sourceMappingURL=stats_pb.js.map