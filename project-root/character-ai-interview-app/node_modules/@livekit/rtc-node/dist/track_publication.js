// SPDX-FileCopyrightText: 2024 LiveKit, Inc.
//
// SPDX-License-Identifier: Apache-2.0
import { FfiClient } from './ffi_client.js';
import { FfiHandle } from './napi/native.js';
import { SetSubscribedRequest } from './proto/room_pb.js';
export class TrackPublication {
    constructor(ownedInfo) {
        this.info = ownedInfo.info;
        this.ffiHandle = new FfiHandle(ownedInfo.handle.id);
    }
    get sid() {
        return this.info.sid;
    }
    get name() {
        return this.info.name;
    }
    get kind() {
        return this.info.kind;
    }
    get source() {
        return this.info.source;
    }
    get simulcasted() {
        return this.info.simulcasted;
    }
    get width() {
        return this.info.width;
    }
    get height() {
        return this.info.height;
    }
    get mimeType() {
        return this.info.mimeType;
    }
    get muted() {
        return this.info.muted;
    }
    get encryptionType() {
        return this.info.encryptionType;
    }
}
export class LocalTrackPublication extends TrackPublication {
    constructor(ownedInfo) {
        super(ownedInfo);
    }
}
export class RemoteTrackPublication extends TrackPublication {
    constructor(ownedInfo) {
        super(ownedInfo);
        this.subscribed = false;
    }
    setSubscribed(subscribed) {
        const req = new SetSubscribedRequest({
            subscribe: subscribed,
            publicationHandle: this.ffiHandle.handle,
        });
        FfiClient.instance.request({
            message: { case: 'setSubscribed', value: req },
        });
    }
}
//# sourceMappingURL=track_publication.js.map